@*
Don't forget to reference the JQuery Library here, inside your view or layout.
<script src="@Url.Content("~/Scripts/jquery-x.x.x.min.js")" type="text/javascript"></script>
*@ @*<script src="@Url.Content("~/Scripts/tinymce/jquery.tinymce.js")" type="text/javascript"></script>*@
@*<script src="../../tinymce/tinymce.min.js" type="text/javascript"></script>*@
@*<script src="../../../tinymce/tinymce.min.js" type="text/javascript"></script>*@
<script type="text/javascript">

    (function () {

        $(function () {
            tinymce.init({
                height: 600,
                selector: "#@ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty)",
                plugins: [
      "advlist autolink lists link image charmap print preview hr anchor pagebreak",
		"searchreplace wordcount visualblocks visualchars code fullscreen",
		"insertdatetime media nonbreaking save table contextmenu directionality",
         "table contextmenu directionality emoticons paste textcolor "
   ], file_browser_callback: RoxyFileBrowser,
                toolbar1: "undo redo | bold italic underline | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | styleselect"
             
            });
        });
    })();

    function RoxyFileBrowser(field_name, url, type, win) {
        var roxyFileman = '/fileman/index.html';
        if (roxyFileman.indexOf("?") < 0) {
            roxyFileman += "?type=" + type;
        }
        else {
            roxyFileman += "&type=" + type;
        }
        roxyFileman += '&input=' + field_name + '&value=' + document.getElementById(field_name).value;
        tinyMCE.activeEditor.windowManager.open({
            file: roxyFileman,
            title: 'Roxy Fileman',
            width: 850,
            height: 650,
            resizable: "yes",
            plugins: "media",
            inline: "yes",
            close_previous: "no"
        }, { window: win, input: field_name });
        return false;
    }
</script>
@Html.TextArea(string.Empty, /* Name suffix */
    ViewData.TemplateInfo.FormattedModelValue /* Initial value */
)
