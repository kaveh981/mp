function setvalid(e) { $("[name='" + e + "']").off(); $("[name='" + e + "']").on({ focusout: function () { myFocusOut($(this)) }, click: function () { myClick($(this)) } }) } function validateAll(e) { var t = 0; e.find('[class*="validate"]').each(function () { if (myFocusOut($(this)) == false) t += 1 }); return t > 0 ? false : true } function selectBoxCheck(e) { var t = e.parent(); if (e.is(":checkbox")) { if (e.is(":checked")) { t.removeClass(); t.addClass("labelCheck checked") } else { t.removeClass(); t.addClass("labelCheck unchecked") } } else { $("[name=" + e.attr("name") + "]").each(function () { var e = $(this); if (e.is(":checked")) { e.parent().removeClass().addClass("labelRadio radioOn") } else { e.parent().removeClass().addClass("labelRadio radioOff") } }) } } function myFocusOut(e) { if (!e.hasClass("required") && !e.hasClass("validate")) return; var t = e.parent(); e.removeClass("ui-state-error"); e.next("#val" + e.attr("id")).remove(); e.after("<span id='val" + e.attr("id") + "'></span>"); var n = e.attr("name"); t.find(".inputTip.tipHelp." + n).css({ display: "none", visibility: "hidden", opacity: "0" }); var r = "  <span style='display:inline' class='inputTip tipWarn String'><span class='tips ui-icon ui-icon-notice'></span>" + "<span class='advice required' style='display: inline;' >" + langs[e.attr("req") == undefined ? "requiredField" : e.attr("req")][$("#ddl_m_Language").val()] + "</span></span>"; var i = " <span style='display:inline' class='inputTip tipWarn String'><span class='tips ui-icon ui-icon-notice'></span>" + "<span class='advice validate' style='display: inline;'>" + langs[e.attr("req") == undefined ? "notValid" : e.attr("req")][$("#ddl_m_Language").val()] + "</span></span>"; var s = "<span class=' tipOk Digit'><span class='tips ui-icon ui-icon-check'></span></span>"; if (e.attr("name") == "comboDiv") { if (!checkValidation(e.attr("name"))) e.next("#val" + e.attr("id")).html(r); else e.next("#val" + e.attr("id")).html(s) } else if (e.hasClass("required") && e.val() == "") { e.addClass("ui-state-error"); e.next("#val" + e.attr("id")).html(r); return false } else if (!e.hasClass("required") && e.val() == "") { e.removeClass("ui-state-error"); e.next("#val" + e.attr("id")).html(s); return true } else if (checkValidation(e.attr("name"), e)) { e.removeClass("ui-state-error"); e.next("#val" + e.attr("id")).html(s); return true } else { e.addClass("ui-state-error"); e.next("#val" + e.attr("id")).html(i); return false } } function myClick(e) { e.next("#val" + e.attr("id")).remove(); e.parent().find(".inputTip.tipHelp." + e.attr("name")).css({ display: "inline", visibility: "visible", opacity: "1" }) } function checkValidation(e, t) { var n = t.val(); switch (e) { case "email": return (new RegExp("^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$")).test(n); break; case "ComboDiv": if (t.hasClass("required")) { if (t.nextAll(".resultBar").html() == "") return false; else return true } else return true; break; case "fileInput": return (new RegExp(/^[a-zA-Z0-9-اآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي\s _.:\\]+$/)).test(n); break; case "Combo": if (n == "" || n == "-") return false; else return true; break; case "ComboBool": if (n == "false" || n == "true") return true; else return false; break; case "LongString": return (new RegExp(/^[a-zA-Z0-9-اآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي\s _]+$/)).test(n); break; case "String": return (new RegExp(/^([a-zA-Zاآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي]+[\s ]?[a-zA-Zاآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي]*)$/)).test(n); break; case "Digit": return (new RegExp(/[1-9](?:\d{0,2})(?:,\d{3})*(?:\.\d*[1-9])?|0?\.\d*[1-9]|0/)).test(n); break; case "Date": return true; break; case "Mobile": return (new RegExp(/^((091)[0-9]\d{7}$)|^((093)[0-9]\d{7}$)/)).test(n); break; case "Phone": return (new RegExp(/^((0)[1-9]\d{9}$)/)).test(n); break; case "Email": return (new RegExp(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/)).test(n); break; case "password": case "newPassword": case "ctrlPassword": return $.trim(n).length >= 1 ? true : false; break; case "passwordConfirm": return n == t.parents("ul").find("[name=password]").val() && n != "" ? true : false; break; case "emailConfirm": return n == $("#newEmail").val() && n != "" ? true : false; break; default: return true } } function chkPhone(e, t) { var n = new RegExp("^[0-9]{11}$"); if (n.test(e)) { document.getElementById("er0" + t).style.visibility = "hidden"; document.getElementById("ok0" + t).style.visibility = "visible" } else { document.getElementById("ok0" + t).style.visibility = "hidden"; document.getElementById("er0" + t).style.visibility = "visible" } } function chkMail(e) { var t = new RegExp("^[0-9a-zA-Z]+@[0-9a-zA-Z]+[.]{1}[0-9a-zA-Z]+[.]?[0-9a-zA-Z]+$"); var n = t.test(e); if (n) { document.getElementById("er01").style.visibility = "hidden"; document.getElementById("ok01").style.visibility = "visible" } else { document.getElementById("ok01").style.visibility = "hidden"; document.getElementById("er01").style.visibility = "visible" } return n } function chkPass(e, t) { if (t == "1") { pass1 = e; if (e != "") { document.getElementById("er02").style.visibility = "hidden"; document.getElementById("ok02").style.visibility = "visible" } else if (e == "") { document.getElementById("ok02").style.visibility = "hidden"; document.getElementById("er02").style.visibility = "visible" } } else if (t == "2") { if (e == pass1 && pass1 != "") { document.getElementById("er03").style.visibility = "hidden"; document.getElementById("ok03").style.visibility = "visible" } else { document.getElementById("ok03").style.visibility = "hidden"; document.getElementById("er03").style.visibility = "visible" } } } function chkLen(e, t) { if (e != "") { document.getElementById("er" + t).style.visibility = "hidden"; document.getElementById("ok" + t).style.visibility = "visible" } else if (e == "") { document.getElementById("ok" + t).style.visibility = "hidden"; document.getElementById("er" + t).style.visibility = "visible" } } function tip(e, t) { if (e == "show") { document.getElementById("tip" + t).style.visibility = "visible" } else if (e == "hide") { document.getElementById("tip" + t).style.visibility = "hidden" } } function IsEmail(e) { var t = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/; return t.test(e) } function GetPersonInfo() { $.ajax({ contentType: "application/json; charset=utf-8", type: "Post", url: "/Account/GetPersonInfo", success: function (e) { if (e.isdone) { $("#gh-ug").html("<a id='a_UserProfile' href='../Account/Profile'>" + e.name + " " + e.family + "</a>  خوش آمدید!   " + "<a href='../Account/LogOff'>خروج</a>") } }, error: function (e) { alert(e.responseText) } }) } function LogOutUser() { $.ajax({ contentType: "application/json; charset=utf-8", type: "Post", url: "/Account/LogOutUser", success: function (e) { if (e.isdone) { $("#gh-ug").html("<a href='../Account/LogOn'>ورود</a> | <a href='../Account/Register'>عضویت</a>") } }, error: function (e) { alert(e.responseText) } }) } function bindHierarchyData(e) { var t = "انتخاب"; if (e.headertext != undefined) t = e.headertext; var n = "selectHierarchy"; if (e.canmodify) n = "selectsmall1 validate"; if (e.css != undefined) n = e.css; var r = "0"; if (e.startlevel != undefined) r = e.startlevel; var i = "0"; if (e.parentid != undefined) i = e.parentid; var s = 20; if (e.depth != undefined) s = e.depth; if (e.container != undefined) var o = $("#" + e.container).find("#" + e.id); else var o = $("#" + e.id); var u = false; if (e.canmodify != undefined) u = e.canmodify; o.html(""); if (u && !e.isAccount) { o.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<a  href='#'><span title='رست' class='hReset unit HierarchyImage ui-icon ui-icon-refresh'></span></a>" + "<select name='parentID'   id='hierarchyAddress' class=' " + n + " ' validation='ComboDiv' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input name='table' type='hidden' value='" + e.table + "'/>" + "<input name='value'   type='text' class='inputText inputW50'  />" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a>" + "<a  class='hEdit' href='#'><span title='ویرایض' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else if (!u && !e.isAccount) { o.append("<a href='#'><span title='رست' class='hReset unit HierarchyImage ui-icon ui-icon-refresh'></span></a>" + "<select name='parentID'  id='hierarchyAddress' class='" + n + "' validation='ComboDiv' ></select>" + " <div  class='resultBar'></div>") } if (e.isAccount) { if (u) { o.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<a  href='#'><span title='رست' class='hReset unit HierarchyImage ui-icon ui-icon-refresh'></span></a>" + "<select    id='hierarchyAddress' class=' " + n + " ' name='parentID' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input name='table' type='hidden' value='" + e.table + "'/>" + "<input  name='value' type='text' class='inputText inputW50'  />" + "<input name='accountCode'  type='text' class='inputText inputW50'  />" + "<select    id='accountNature' class=' " + n + " ' name='accountNature' >" + "<option value='1'>انتظامی</option>" + "<option value='2'>بهای تمام شده</option>" + "<option value='3'>ترازنامه ای</option>" + "<option value='4'>درآمد</option>" + "<option value='5'>فروش</option>" + "<option value='6'>هزینه</option>" + "<option value='7'>مشخص نیست</option>" + "<option value='8'>بدهکار پایان دوره</option>" + "<option value='9'>بستانکار طی دوره</option>" + "<option value='10'>بدهکار طی دوره</option>" + "<option value='11'>بستانکار پایان دوره</option>" + "<option value='12'>بدهکار</option>" + "<option value='13'>بستانکار</option>" + "</select>" + "<select    id='groupType' class=' " + n + " ' name='groupType' >" + "<option value='1'>بدهی</option>" + "<option value='2'>دارایی</option>" + "<option value='3'>سرمایه</option>" + "<option value='4'>درآمد</option>" + "<option value='5'>فروش</option>" + "<option value='6'>هزینه</option>" + "</select>" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a> <input class='hidden' name='btn_submit'  type='submit' value='send' />" + "<a  class='hEdit' href='#'><span title='ویرایض' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else { o.append("<a href='#'><span title='رست' class='hReset unit HierarchyImage ui-icon ui-icon-refresh'></span></a>" + "<select name='parentID'  id='hierarchyAddress' class='" + n + "' name='ComboDiv' ></select>" + " <div  class='resultBar'></div>") } } var a = $("#" + e.container); a.find("#" + e.id).find("[name='btn_submit']").button({ icons: { primary: "ui-icon-plusthick" }, text: false }); a.find("#" + e.id).ajaxForm({ data: { parentID: o.find(".resultBar span").last().length > 0 ? o.find(".resultBar span").last().prop("id") : 0 }, success: function (n) { if (n.isDone != undefined && !n.isDone) { alert(n.msg); return } if (hierarchyAction == "add") { var r = o.find(".resultBar"); r.append("<span class='spanAction' name='hiddenOption' id='" + n.id + "' >" + n.value + " > </span>"); r.find("#" + n.id).click(function () { onOptionClicked(o, n.id, e.table) }); BindOptionsHtml(n, o.find("select[name='parentID']"), true); o.find(".inputText").val("") } if (hierarchyAction == "delete") { BindOptionsHtml(n, o.find("select[name='parentID']"), false); o.find(".resultBar span").last().remove(); if (o.find(".resultBar span").last().length > 0) o.find("span.text").html(o.find(".resultBar span").last().html().replace("&gt;&gt;", "")); else o.find("span .text").html(t) } if (hierarchyAction == "edit") { o.find(".resultBar span").last().html(o.find(".inputText").val() + "&gt;&gt;"); o.find("span.text").html(o.find(".inputText").val()) } setSelectedValueID(o) }, error: function (e) { alerrt(e) } }); var f = o.find("select[name='parentID']"); f.unbind().bind("change", function () { onOptionChanged(this, e.table, s, o) }); o.find(".hReset").unbind().bind("click", function () { Resetbut_onclick(o, e.table, r, i, t, e.resetid) }); o.find(".hExpand").unbind().bind("click", function () { if ($(this).hasClass("ui-icon-circle-triangle-s")) { $(this).removeClass("ui-icon-circle-triangle-s").addClass("ui-icon-circle-triangle-n").prop("title", "بسته") } else if ($(this).hasClass("ui-icon-circle-triangle-n")) $(this).removeClass("ui-icon-circle-triangle-n").addClass("ui-icon-circle-triangle-s").prop("title", "باز"); o.find(".editBox").toggle() }); o.find(".hDelete").unbind().bind("click", function () { hierarchyAction = "delete"; a.find("#" + e.id).attr("action", "/Hierarchy/Delete"); a.find("#" + e.id).attr("action", "/Hierarchy/Delete").submit() }); o.find(".hAdd").unbind().bind("click", function () { hierarchyAction = "add"; a.find("#" + e.id).attr("action", "/Hierarchy/Add"); a.find("#" + e.id).attr("action", "/Hierarchy/Add").submit() }); o.find(".hEdit").unbind().bind("click", function () { hierarchyAction = "edit"; a.find("#" + e.id).attr("action", "/Hierarchy/Update"); a.find("#" + e.id).attr("action", "/Hierarchy/Update").submit() }); if (e.parentid != undefined) { BindParents(o, e.table, e.parentid, r); return } ajHierarchy = $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + (e.parentid == undefined ? "" : e.parentid) + "', table: '" + e.table + "'}", contentType: "application/json; charset=utf-8", success: function (e) { BindOptionsHtml(e, f); setSelectedValueID(o) }, error: function (e) { alert(e.responseText) } }) } function onOptionChanged(e, t, n, r) { var i = $(e).val(); var s = $(e).selectedOptions()[0].text; var o = 0; var u = r.prop("id"); $("a[name='hiddenOption']").each(function () { o = o + 1 }); if (i != "-" && o < n) { var a = r.find(".resultBar"); a.append("<span class='spanAction' name='hiddenOption' id='" + i + "'>" + s + " > </span>"); a.find("#" + i).click(function () { onOptionClicked(r, i, t) }); if (o + 1 < n) { $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + r.find(".resultBar span").last().prop("id") + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (e) { BindOptionsHtml(e, r.find("select[name='parentID']")); setSelectedValueID(r) } }) } } } function onOptionClicked(e, t, n) { $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + t + "', table: '" + n + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindOptionsHtml(n, e.find("select[name='parentID']"), false); var r = e.find(".resultBar span"); while (e.find(".resultBar span").last() != null && e.find(".resultBar span").last().prop("id") != t) { e.find(".resultBar span").last().remove() } setSelectedValueID(e) } }) } function BindOptionsHtml(response, $hrSelect, isAdd, isParents) { if (!isAdd) { var Details; if (isParents) Details = response; else Details = typeof response.d == "string" ? eval("(" + response.d + ")") : response.d } $hrSelect.removeOption(/./).addOption("-", " انتخاب "); if (Details != undefined) for (var j = 0; j < Details.length; j++) { var val = Details[j]; var text = val.value; var value = val.id; $hrSelect.addOption(value, text, false) } } function setSelectedValueID(e) { e.find("#selectedValue").remove(); e.append("<input name='selectedValue' id='selectedValue' type='hidden' />"); if (e.find(".resultBar span").last() != null) e.find("#selectedValue").val(e.find(".resultBar span").last().prop("id")); else { if ($("#startLevelID").val() != null) e.find("#selectedValue").val($("#startLevelID").val()); else e.find("#selectedValue").val(null) } } function BindParents($hrDiv, tableName, selectedValue, startLevel, options) { $.ajax({ type: "POST", url: "/Hierarchy/GetParents", data: "{parentID: '" + selectedValue + "', table: '" + tableName + "', StartLevel: '" + startLevel + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (response) { if (!isAuthenticated(response)) return; if (response.d != null) { var Details = typeof response.d.parents == "string" ? eval("(" + response.d.parents + ")") : response.d.parents; if (options != undefined && options.isRaw) { for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var id = val[1]; $hrDiv.append("<span >" + val[0] + " > </span>") } $hrDiv.append(options.concat) } else { BindOptionsHtml(response.d.body, $hrDiv.find("select[name='parentID']"), false, true); var $resultBar = $hrDiv.find(".resultBar"); $resultBar.find("span").remove(); { for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var id = val[1]; $resultBar.append("<span class='spanAction' name='hiddenOption' id='" + id + "' >" + val[0] + " > </span>"); $resultBar.find("[class=spanAction]").click(function () { onOptionClicked($hrDiv, $(this).attr("id"), tableName) }) } } } setSelectedValueID($hrDiv) } } }) } function Resetbut_onclick(e, t, n, r, i, s) { if (s != undefined) { BindParents(container, t, s, n); return } $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + "" + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (t) { e.find(".resultBar span").remove(); BindOptionsHtml(t, e.find("select[name='parentID']"), false); setSelectedValueID(e) } }) } function getHierarchySelectedValue(e, t) { if (t != undefined) return $("#" + t).find("#" + e).find("#selectedValue").val() == undefined ? null : $("#" + t).find("#" + e).find("#selectedValue").val(); else return $("#" + e).find("#selectedValue").val() == undefined ? null : $("#" + e).find("#selectedValue").val() } function bindRawDropDownData(e) { var t = "انتخاب"; if (e.headertext != undefined) t = e.headertext; if (e.container != undefined) var n = $("#" + e.container).find("#" + e.id); else var n = $("#" + e.id); var r = false; if (e.canmodify != undefined) r = e.canmodify; var i = "selectHierarchy"; if (e.canmodify) i = "selectsmall validate"; if (e.css != undefined) i = e.css; var s = true; if (e.async != undefined) s = e.async; if (r) { n.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<select   id='hierarchyAddress' class=' " + i + " ' name='parentID' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input   type='text' class='inputText inputW50'  />" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a>" + "<a  class='hEdit' href='#'><span title='ویرایش' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else { n.append("<select   id='hierarchyAddress' class=' " + i + "' name='parentID' ></select>") } var o = n.find("select[name='parentID']"); n.find(".hExpand").unbind().bind("click", function () { if ($(this).hasClass("ui-icon-circle-triangle-s")) $(this).removeClass("ui-icon-circle-triangle-s").addClass("ui-icon-circle-triangle-n"); else if ($(this).hasClass("ui-icon-circle-triangle-n")) $(this).removeClass("ui-icon-circle-triangle-n").addClass("ui-icon-circle-triangle-s"); n.find(".editBox").toggle() }); n.find(".hDelete").unbind().bind("click", function () { DeleteRaw_onclick(n, e) }); n.find(".hAdd").unbind().bind("click", function () { AddRaw_onclick(n, e) }); n.find(".hEdit").unbind().bind("click", function () { UpdateRaw_onclick(n, e) }); ajHierarchy = $.ajax({ type: "POST", url: "/XmlDropDown/GetComboItemsRaw", async: s, data: "{table: '" + e.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (t) { if (!isAuthenticated(t)) return; BindRawOptionsHtml(t, o, e) } }) } function BindRawOptionsHtml(response, $hrSelect, options) { var Details = typeof response == "string" ? eval("(" + response + ")") : response; $hrSelect.removeOption(/./).addOption("", options.headertext); if (Details.length < 1) return; for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var text = val.value; if (options.istext) var value = val.value; else var value = val.id; $hrSelect.addOption(value, text, false) } } function AddRaw_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/AddRaw", data: "{value: '" + e.find(".inputText").val() + "', table: '" + t.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (n) { if (!isAuthenticated(n)) return; BindRawOptionsHtml(n, e.find("select[name='parentID']"), t); e.find(".inputText").val("") } }) } function UpdateRaw_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/UpdateRaw", data: "{id:'" + e.find("select[name='parentID']").val() + "',value: '" + e.find(".inputText").val() + "', table: '" + t.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (n) { if (!isAuthenticated(n)) return; BindRawOptionsHtml(n, e.find("select[name='parentID']"), t); e.find(".inputText").val("") } }) } function DeleteRaw_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/DeleteRaw", data: "{id: '" + e.find("select[name='parentID']").val() + "', table: '" + t.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (n) { if (!isAuthenticated(n)) return; BindRawOptionsHtml(n, e.find("select[name='parentID']"), t); e.find(".inputText").val("") } }) } function bindXmlDropDownData(e) { var t = "انتخاب"; if (e.headertext != undefined) t = e.headertext; if (e.container != undefined) var n = $("#" + e.container).find("#" + e.id); else var n = $("#" + e.id); var r = false; if (e.canmodify != undefined) r = e.canmodify; var i = "selectHierarchy"; if (e.canmodify) i = "selectsmall validate"; if (e.css != undefined) i = e.css; var s = true; if (e.async != undefined) s = e.async; if (r) { n.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<select   id='hierarchyAddress' class=' " + i + " ' name='parentID' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input   type='text' class='inputText inputW50'  />" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a>" + "<a  class='hEdit' href='#'><span title='ویرایش' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else { n.append("<select   id='hierarchyAddress' class=' " + i + "' name='parentID' ></select>") } var o = n.find("select[name='parentID']"); n.find(".hExpand").unbind().bind("click", function () { if ($(this).hasClass("ui-icon-circle-triangle-s")) $(this).removeClass("ui-icon-circle-triangle-s").addClass("ui-icon-circle-triangle-n"); else if ($(this).hasClass("ui-icon-circle-triangle-n")) $(this).removeClass("ui-icon-circle-triangle-n").addClass("ui-icon-circle-triangle-s"); n.find(".editBox").toggle() }); n.find(".hDelete").unbind().bind("click", function () { DeleteXml_onclick(n, e) }); n.find(".hAdd").unbind().bind("click", function () { AddXml_onclick(n, e) }); n.find(".hEdit").unbind().bind("click", function () { UpdateXml_onclick(n, e) }); ajHierarchy = $.ajax({ type: "POST", url: "/XmlDropDown/GetComboItems", async: s, data: "{path: '" + e.path + "'}", contentType: "application/json; charset=utf-8", success: function (t) { BindXmlOptionsHtml(t, o, e) } }) } function BindXmlOptionsHtml(response, $hrSelect, options) { var Details = typeof response == "string" ? eval("(" + response + ")") : response; $hrSelect.html(""); $hrSelect.append("<option value=''>" + options.headertext + "</option>"); for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var text = val.name; if (options.istext) var value = val.name; else var value = val.id; $hrSelect.append("<option value='" + value + "'>" + text + "</option>") } } function AddXml_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/Add", data: "{value: '" + e.find(".inputText").val() + "', path: '" + t.path + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindXmlOptionsHtml(n, e.find("select[name='parentID']"), t); e.find(".inputText").val("") } }) } function UpdateXml_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/Update", data: "{id:'" + e.find("select[name='parentID']").val() + "',value: '" + e.find(".inputText").val() + "', path: '" + t.path + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindXmlOptionsHtml(n, e.find("select[name='parentID']"), t); e.find(".inputText").val("") } }) } function DeleteXml_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/Delete", data: "{id: '" + e.find("select[name='parentID']").val() + "', path: '" + t.path + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindXmlOptionsHtml(n, e.find("select[name='parentID']"), t); e.find(".inputText").val("") } }) } function pageselectCallback(e, t, n) { var r = $("#" + n.pagingContainer); if (n.first) { n["params"] = t } if (n.noPaging == undefined || n.noPaging == false) { if (n.container != "") var i = $("#" + n.container + n.pagingContainer); else var i = r; if (e > 0) { n.first = false } else if (n.first) { n["params"] = t; if (i.find("#PageSize").val() != undefined) i.find("#PageSize").off().on("change", function () { n.params.callbackmethod(n.pagingContainer, t) }); else r.find("#PageSize").off().on("change", function () { n.params.callbackmethod(n.pagingContainer, t) }) } var s = n.params.DTO; if (i.find("#PageSize").val() != undefined) var o = i.find("#PageSize").val(); else var o = r.find("#PageSize").val(); var u = ""; var a = o; var f = e == 0 ? 0 : e * a; s["skip"] = f; s["take"] = a; s["currentPage"] = e; s["first"] = n.first } if (n.params.selectCase != undefined) { s["selectData"] = n.params.selectCase } if (n.params.print != undefined) { if (n.params.print) s["selectData"] = "PrintItemList" } $.ajax({ contentType: "application/json; charset=utf-8", dataType: "json", data: JSON.stringify(n.params.DTO), type: "Post", url: "/" + n.params.servicename + "/" + n.params.methodname, success: function (t) { if (!isAuthenticated(t)) return; if (n.params.print) { n.params.build(t, n); return } if (t.count == 1 && n.isOrder == true && n.container != "") { n.fname(null, n.pagingContainer, t.results[0].Barcode, n.isChangeQuantity) } else { if (e < 1 && n.first && !n.noPaging) { var r = getPageOptions({ params: n.params, count: t.count, container: n.container, fname: n.fname, pagingContainer: n.pagingContainer, callBackName: pageselectCallback }); i.find("#paging").pagination(t.count, r); n.params.build(t, n); if (n.container != "") i.dialog({ width: 650 }).dialog("open") } else n.params.build(t, n); newSort(n.params.callbackmethod, n.pagingContainer, n.params) } }, error: function (e) { translate(e.responseText) } }) } function getPageOptions(e) { if (e.pagingContainer != "") var t = $("#" + e.pagingContainer); else var t = $("#" + e.container); var n = { callback: e.callBackName }; t.find("input:text").each(function () { n[this.name] = this.className.match(/numeric/) ? parseInt(this.value) : this.value }); n.prev_show_always = false; n.next_show_always = false; if (e.count < t.find("#PageSize").val()) t.find("#PageSize").css("display", "none"); else { t.find("#PageSize").css("display", "inline") } n.items_per_page = t.find("#PageSize").val(); n.prev_text = "<<-قبلی"; n.next_text = "بعدی->>"; n.container = e; return n } function buildTable(e) { $con = $("#" + e.container); var t = 300; if (e.heigth != undefined) t = e.heigth; var n = "<table class='table'><thead><tr  >"; var r = "<tfoot><tr>"; $.each(e.header, function () { if (e.hasFooter) { if (this.footer != undefined) r += "<td class='digit' style='border:0px;' >" + this.footer + "</td>"; else r += "<td class='digit' style='border:0px;' >&nbsp;</td>" } if (this.sort != undefined) { var t = ""; var i = sortid.split(" "); if (i[0] == this.sort) t = i[1]; n += "<td " + (this.width != undefined ? "width='" + this.width + "'" : " ") + (this.height != undefined ? "height='" + this.height + "'" : " ") + " ><a href='javascript:void(0);' id='" + this.sort + "' rel='sort' class='sorted " + t + "' >" + this.title + "</a></td>" } else n += "<td " + (this.width != undefined ? "width='" + this.width + "'" : " ") + (this.height != undefined ? "height='" + this.height + "'" : " ") + " ><span>" + this.title + "</span></td>" }); n += "</tr></thead>"; if (e.hasFooter) { n += r; n += "</tr></tfoot>" } n += "<tbody>"; var i = 0; $.each(e.body, function () { var t = this[0].trId; var r = ""; r = this[0].trName; if (r != "") n += "<tr name='" + r + "' id='tr" + t + "'>"; else n += "<tr id='tr" + t + "'>"; $.each(this, function () { if (this.subId != undefined) { n += "<td " + (this.width != undefined ? "style='width:" + this.width + "'" : " ") + (this.tooltip != undefined ? "title='" + this.html : "") + "' name='" + this.name + "' ><span class='cursor' menuName='" + this.menuName + "' name='subTab' id='" + this.subId + "'>" + (this.tooltip == undefined ? this.html : this.html.substring(0, this.tooltip) + "...") + "</span></td>" } else if (this.trId == undefined && this.props == undefined) { if (this.id != undefined) n += "<td " + (this.width != undefined ? "style='width:" + this.width + "'" : " ") + (this.tooltip != undefined ? "title='" + this.html : "") + "' name='" + this.name + "' id='" + this.id + "'>" + (this.tooltip == undefined ? this.html : this.html.substring(0, this.tooltip) + "...") + "</td>"; else if (this.id == undefined) n += "<td " + (this.width != undefined ? "style='width:" + this.width + "'" : " ") + (this.tooltip != undefined ? "title='" + this.html : "") + "' name='" + this.name + "'>" + (this.tooltip == undefined ? this.html : this.html.substring(0, this.tooltip) + "...") + "</td>" } else if (this.props != undefined) { var e; var t = ""; var r = this.props; for (e in r) { t += " " + (e == "klass" ? "Class" : e) + "='" + r[e] + "' " } n += "<td " + t + "'>" + (r.tooltip == undefined ? this.html : this.html.substring(0, r.tooltip) + "...") + "</td>" } }); if (e.details != undefined && e.details.printFunction != undefined) { n += "<td width='4%;' cursor='noCursor'><button id='btnPrintInvoice' >print</button>" } if (e.details != undefined && e.details.editFunction != undefined) { n += "<td width='4%;' cursor='noCursor'><button id='btnEdit' >ویرایش</button>" } if (e.details != undefined && e.details.deleteFunction != undefined) n += "<td width='4%;' cursor='noCursor'><button id='btnDelete'>حذف</button></td>"; if (e.details != undefined && e.details.detailsFunction != undefined) n += "<td width='4%;'><button id='btnDetails'>جزئیات</button></td>"; else n += "</td>"; n += "</tr>"; i++ }); n += "</tbody></table>"; if (e.width != undefined) { $con.find("#" + e.divName).html(n).find("table").tableScroll({ height: t, width: e.width, flush: false }) } else { $con.find("#" + e.divName).html(n).find("table").tableScroll({ height: t, width: contentwidth, flush: false }) } $con.find("[name=subTab]").unbind().click(function () { var e = $(this); createSubTab({ name: e.attr("menuName"), tabName: e.html(), id: e.attr("id") }) }); $con.find("[id=btnPrintInvoice]").button({ icons: { primary: "ui-icon-print" }, text: false }).unbind().click(function () { var t = this; e.details.printFunction(this, e.container) }); $con.find("[id=btnEdit]").button({ icons: { primary: "ui-icon-pencil" }, text: false }).unbind().click(function () { var t = this; e.details.editFunction(this, e.container) }); $con.find("[id=btnDelete]").button({ icons: { primary: "ui-icon-closethick" }, text: false }).unbind().click(function () { if (confirm("آیا از حذف مطمئن هستید؟")) { var t = this; e.details.deleteFunction($(this).parents("tr").attr("id").replace("tr", ""), e.container) } else return }); $con.find("[id=btnDetails]").button({ icons: { primary: "ui-icon-plus" }, text: false }).unbind().click(function () { var t = this; e.details.detailsFunction(this, e.container) }); $con.find("[id=btnConfirm]").button({ icons: { primary: "ui-icon-check" }, text: false }).unbind().click(function () { var t = this; e.details.confirmFunction(this, e.container) }); if (e.details != undefined) { if (e.details.rowClick != undefined) { $con.find("tr[id*=tr]").find("td:not([cursor=noCursor])").click(function () { e.details.rowClick($(this).parent("tr"), e.container.replace("dialog", "")) }).addClass("cursor") } } var s = 0; $con.find("thead").find("td").each(function () { $con.find("tfoot").find("td").eq(s).width($(this).width()); s++ }) } function buildPrintTable(e) { $con = $("#" + e.container); var t = 300; if (e.heigth != undefined) t = e.heigth; var n = "<table  class='tableDetail'><thead><tr class='chead'>"; var r = "<tfoot><tr>"; $.each(e.header, function () { if (e.hasFooter) { if (this.footer != undefined) r += "<td>" + this.footer + "</td>"; else r += "<th></th>" } n += "<th nowrap='nowrap'><span>" + this.title + "</span></th>" }); n += "</tr></thead>"; if (e.hasFooter) { n += r; n += "</tr></tfoot>" } n += "<tbody>"; var i = 0; $.each(e.body, function () { n += "<tr >"; $.each(this, function () { n += "<td " + (this.name != undefined ? "name='" + this.name : "") + "' >" + this.html + "</td>" }); n += "</tr>" }); n += "</tbody></table>"; if (e.width != undefined) { $con.find("#" + e.divName).html(n).find("table").tableScroll({ height: t, width: e.width, flush: false }) } else { $con.find("#" + e.divName).html(n) } $.each($con.find("#" + e.divName).find("[name=barcode]"), function () { var e = $(this); e.barcode(e.html(), "code39", { showHRI: false, barWidth: 1, barHeight: 15 }) }); localize(); Popup($con.find("#" + e.divName).html()) } function newSort(e, t, n) { if (t != undefined && n.container != "dialog") $con = $("#" + t); if (n.container != undefined && n.container == "dialog") $con = $("#" + n.container + t); $con.find("a[rel=sort]").die("click").on("click", function () { $con.find("a[rel=sort]").removeClass("sorted"); $(this).addClass("sorted"); if (this.id == sortid.split(" ")[0].toString()) { if (sortid.split(" ")[1] == "DESC") sortid = this.id + " ASC"; else sortid = this.id + " DESC" } else { sortid = this.id + " DESC" } e(t, n) }) } function aComplete(e, t) { var n = $("#" + e.container); var r = "#" + e.id; n.find(r).autocomplete({ source: function (r, i) { var s = { q: r.term, limit: e.limit }; if (t != undefined) s["Status"] = n.find("#ddl_m_Availability").val(); if (e.data != undefined) { var o; var u = e.data; for (o in u) { s[o] = u[o] } } $.ajax({ url: e.servicename + "/" + e.methodname, data: JSON.stringify(s), dataType: "json", type: "POST", contentType: "application/json; charset=utf-8", success: function (e) { if (e.length > 0) { i($.map(e, function (e) { return { label: e.label + (e.label1 != undefined ? " " + e.label1 : "") + (e.label2 != undefined ? " " + e.label2 : ""), value: e.value, id: e.id != undefined ? e.id : null} })) } } }) }, focus: function (t, r) { n.find("#" + e.boxId).val(r.item.value); return false }, select: function (t, i) { n.find("#" + e.boxId).val(e.selectBarcode != undefined && e.selectBarcode ? i.item.Barcode : i.item.value); if (e.fname != undefined) e.fname(t, i, e.container, r); return false }, minLength: e.minlength, autoFocus: e.autofocus }) } function tableStyle() { $(".tablescroll").addClass("red"); $("tbody tr").addClass("ui-state-default"); $("tbody tr").mouseover(function () { $(this).addClass("ui-state-hover") }); $("tbody tr").mouseout(function () { $(this).removeClass("ui-state-hover") }) } function SetCheckboxes() { var e = getParameterByName("isOffer") == "true" ? true : false; var t = getParameterByName("isSale") == "true" ? true : false; var n = getParameterByName("isNew") == "true" ? true : false; $("#isOffer").attr("checked", e); $("#isSale").attr("checked", t); $("#isNew").attr("checked", n) } function bindItemsForSelectCombo(options, data) { var $select = $("#" + options.container).find("#" + options.id); var async = true; if (options.async != undefined) async = options.async; if (data != undefined) var DTO = data; else var DTO = {}; if (options.data != undefined) { var strName; var oObject = options.data; for (strName in oObject) { DTO[strName] = oObject[strName] } } ajDropDown = $.ajax({ type: "POST", url: options.servicename + "/" + options.methodname, contentType: "application/json; charset=utf-8", data: JSON.stringify(DTO), async: async, success: function (response) { if (!isAuthenticated(response)) return; var Details = typeof response == "string" ? eval("(" + response + ")") : response; bindComboData(options, Details) } }) } function bindComboData(e, t) { var n = $("#" + e.container).find("#" + e.id); var r = true; if (e.async != undefined) r = e.async; if (t != null) { if (t.length > 0) n.prop("disabled", ""); else return; if (e.headertext != undefined) n.removeOption(/./).addOption("", e.headertext); for (var i = 0; i < t.length; i++) { var s = t[0, i]; if (e.setcolor) n.append("<option style='background-color:" + s.name + ";' value=" + s.id + " >" + s.name + "</option>"); else { if (e.isMeasureUnit) { n.append("<option  value=" + s.id + "_" + s.discount + " >" + s.name + "_" + s.id + "</option>") } else n.append("<option  value=" + s.id + " >" + s.name + "</option>") } } } if (e.selectedvalue != undefined) n.val(e.selectedvalue); if (e.selectedindex != undefined) n.val(n.find("option")[e.selectedindex].value) } function ChangeCheckBoxName(e, t) { $("#" + t).find("#" + e).prop("id", e + t).next("label").prop("for", e + t); $("#" + t).find("#" + e + t).button() } function ResetPage(e) { var t = $("#" + e); t.find("input:text").val(""); t.find(".inputTip.tipOk").css({ display: "none", visibility: "hidden", opacity: "0" }) } function GetMenuItems() { menuItems = $.ajax({ contentType: "application/json; charset=utf-8", dataType: "json", type: "Post", url: "Management/getMenu", success: function (e) { if (!isAuthenticated(e)) return; BuildMainTabs(e); masterLocalize() }, error: function (e) { alert(e.responseText) } }) } function BuildMainTabs(response) { var Products = typeof response == "string" ? eval("(" + response + ")") : response; var basketItems = "<ul class='top-nav' >"; for (var j = 0; j < Products.length; j++) { var val = Products[0, j]; basketItems += "<li ><a mllk='" + val.title + "' mainTab='" + val.id + "'  name='#div" + val.id + "-" + val.id + "'  href='div_" + val.id + "' >" + val.title + "</a></li>" } basketItems += "</ul>"; $("#mainTab").html(basketItems).tabs({ beforeLoad: function (e, t) { if (t.tab.data("loaded")) { e.preventDefault(); return } t.jqXHR.success(function () { t.tab.data("loaded", true) }) }, beforeActivate: function (e, t) { t.oldTab.parents("ul").find("li").removeClass("oldTab").removeClass("red").addClass("sunny"); var n = t.oldTab.addClass("oldTab").removeClass("sunny").addClass("red"); var r = t.newPanel.find(".subTab"); if (r.find(".ui-state-active a").length > 0) { var i = window["load" + r.find(".ui-state-active a").prop("id").split("_")[1]]; if (typeof i === "function") i(r.find(".ui-state-active").attr("aria-controls"), false) } else if (r.find("#toolbar").length > 0) { var i = window["load" + r.prop("id").split("_")[1]]; if (typeof i === "function") i("tab" + r.prop("id").split("_")[1], false) } }, create: function (event, ui) { var d = $(this).find("div"); for (var j = 0; j < Products.length; j++) { var subTab = ""; var val = Products[0, j]; if (val.subMenu == "toolbar") { var id = val.id.replace("a_", ""); subTab += "<div class='heading subTab sunny' id='div_" + id + "'><span id='toolbar' >"; var subMenu = typeof val.sub == "string" ? eval("(" + val.sub + ")") : val.sub; if (subMenu.length > 0) { for (var s = 0; s < subMenu.length; s++) { var subVal = subMenu[0, s]; subTab += "<button mllk='" + subVal.title + "' fName='" + subVal.id + "' size='" + subVal.size + "' href=" + subVal.url + " id='" + subVal.id + "'>" + subVal.title + "</button>" } subTab += "</span></div><div id='tab" + id + "'></div><div dir='rtl' id='dialogAdd" + id + "'></div>" } else { subTab += "</span></div><div id='tab" + id + "'></div><div dir='rtl' id='dialogAdd" + id + "'></div>" } var $d = $(d[j]).html(subTab); var first = true; $("#tab" + id).load(val.url, function () { window["load" + $(this).attr("id").replace("tab", "")]($(this).prop("id"), true) }); $dialog = $("#dialogAdd" + id); $d.find("button").button({ text: true, icons: { primary: "ui-icon-plus"} }).click(function () { $button = $(this); $dialog.load($button.attr("href").replace("_#", " #"), function () { window["load" + $button.attr("fName").replace("a_", "")]("dialogAdd" + id, true); $(this).dialog({ width: $button.attr("size"), modal: true, position: { my: "top", at: "top", of: $(".top-nav")} }).dialog(open) }); $("#play").button("option", { label: "play", icons: { primary: "ui-icon-play"} }) }) } else { subTab += "<div class='subTab' id='div_" + val.id + "'><ul subTab class='heading'>"; var subMenu = typeof val.sub == "string" ? eval("(" + val.sub + ")") : val.sub; var subTabQuan = 0; if (subMenu.length > 0) { for (var s = 0; s < subMenu.length; s++) { var subVal = subMenu[0, s]; subTab += "<li  ><a mllk='" + subVal.title + "'  id='" + subVal.id + "' name='" + subVal.url + "' href='" + subVal.url + "'>" + subVal.title + "</a></li>"; subTabQuan++ } if (response[j].active == "true") subTabQuan = 0; subTab += "</ul></div>" } else { subTab += "</ul></div>" } var $d = $(d[j]).html(subTab); var first = true; $d.tabs({ collapsible: subTabQuan > 1 ? true : false, active: subTabQuan > 1 ? false : 0, beforeLoad: function (e, t) { if (t.tab.data("loaded")) { e.preventDefault(); if (e.srcElement != undefined || e.target != undefined) { var n = window["load" + t.tab.children("a").prop("id").split("_")[1]]; if (typeof n === "function") n(t.panel.prop("id"), false) } return } t.jqXHR.success(function () { t.tab.data("loaded", true) }) }, load: function (e, t) { var n = window["load" + t.tab.find("a").attr("id").split("_")[1]]; if (typeof n === "function") { n(t.panel.attr("id"), true) } } }) } } } }) } function GetSubMenuItems() { var $con = $("#divSubTabMenu"); $.ajax({ contentType: "application/json; charset=utf-8", dataType: "json", type: "Post", url: "Management/getAllSubMenu", success: function (response) { if (!isAuthenticated(response)) return; var basketItems = ""; for (var d = 0; d < response.length; d++) { var Products = typeof response[d].sub == "string" ? eval("(" + response[d].sub + ")") : response[d].sub; basketItems += "<ul active='" + response[d].active + "' id='" + response[d].root + "' subMenu='" + response[d].subMenu + "' class='formControls'>"; for (var j = 0; j < Products.length; j++) { var val = Products[0, j]; basketItems += "<li  class='formControl'><a  name='" + val.url + "' href='#' id='" + val.id + "'><span>" + val.title + "</span></a></li>" } basketItems += "</ul>" } $con.html(basketItems) }, error: function (e) { alert(e.responseText) } }) } function createSubTab(e) { var t = ""; var n = e.id != undefined ? e.id : e.row.prop("id").replace("tr", ""); var r = e.tabName == undefined ? e.row.find("td[name='name']").html() : e.tabName; var i = $("#mainTab"); var s; var o = $("#divSubTabMenu").find("#" + e.name); var u = o.attr("active"); var a = o.find("li").length; var f = o.find("li").first().find("a").prop("id"); var l = "div" + n + "-" + o.find("li").first().find("a").prop("id"); var c; i.tabs({ collapsible: a > 1 ? true : false, active: a > 1 ? false : true }); if (i.find("a[name='" + n + "']").length == 0) { $("#mainTab >ul").append("<li  class='sunny' ><a mainTab='" + e.name + "' href='k'>" + r + "</a> <span class='ui-icon ui-icon-close'>Remove Tab</span></li>"); $("#mainTab >ul").append("<div ></div>"); i.tabs("refresh"); var h = $("#mainTab >ul >li").size() - 1; i.tabs({ active: h }); $("#mainTab .top-nav span.ui-icon-close").off().on("click", function () { var e = $(this).parent().remove(); var t = e.attr("aria-controls"); $("#" + t).remove(); i.tabs("refresh") }); c = $("#mainTab >ul >li ").eq(h).attr("aria-controls"); if (o.attr("subMenu") == "toolbar") { var p = c; var d = ""; d += "<div  class='heading subTab sunny' id='div_" + c + "'><span id='toolbar' >"; $.each(o.find("li"), function (e, t) { d += "<button mllk='" + $(this).find("a span").html() + "' size='" + $(this).find("a").attr("size") + "' id='" + $(this).find("a").prop("id") + "' fName='" + $(this).find("a").prop("id") + "' name='#div" + n + "-" + $(this).find("a").prop("id") + "'  href='" + $(this).find("a").prop("name") + "' >" + $(this).find("a span").html() + "</button>" }); d += "</span></div><div id='tab" + p + "'></div><div dir='rtl' id='dialogAdd" + p + "'></div>"; s = $("#" + c); var v = s.html(d); var m = true; $dialog = $("#dialogAdd" + p); v.find("button").button({ text: true, icons: { primary: "ui-icon-plus"} }).click(function () { $button = $(this); $dialog.load($button.attr("href").replace("_#", " #"), function () { window["load" + $button.attr("fName").replace("a_", "")](null, "dialogAdd" + p, true); $(this).dialog({ width: $button.attr("size"), modal: true, position: { my: "top", at: "top", of: $(".top-nav")} }).dialog(open) }); $("#play").button("option", { label: "play", icons: { primary: "ui-icon-play"} }) }) } else { var g = "<ul subTab class='heading'>"; var y = ""; var a = 0; $.each(o.find("li"), function (e, t) { g += "<li ><a  id='" + $(this).find("a").prop("id") + "' mllk='" + $(this).find("a span").html() + "' name='#div" + n + "-" + $(this).find("a").prop("id") + "'  href='" + $(this).find("a").prop("name") + "#content' >" + $(this).find("a span").html() + "</a></li>"; a++ }); g += "</ul>" + y; s = $("#" + c); s.html(g).tabs({ collapsible: u == "true" ? false : true, active: u == "true" ? 0 : false, beforeLoad: function (e, t) { $("[id*=dialog]").dialog().dialog("destroy"); if (t.tab.data("loaded")) { e.preventDefault(); return } t.jqXHR.success(function () { t.tab.data("loaded", true) }) }, load: function (e, t) { var r = window["load" + t.tab.find("a").attr("name").split("_")[1].replace("a_", "")]; if (typeof r === "function") { r(n, t.panel.attr("id"), true) } }, beforeActivate: function (e, t) { var r = window["load" + t.newTab.find("a").attr("name").split("_")[1].replace("a_", "")]; if (typeof r === "function" && $(t.newPanel).html().length > 0) { r(n, t.newPanel.attr("id"), false) } } }) } } else { i.tabs("beforeActivate", "#" + i.find("a[name='" + n + "']").prop("href").split("#")[1]) } return c } function localize() { var e = $("[aria-expanded='true']:visible").first(); $lang = $("#ddl_m_Language"); if ($lang.val() == "pr") { $("[dir=ltr]").prop("dir", "rtl"); $("#divDashboardChart,#Div_SaleChart").prop("dir", "ltr"); document.getElementById("leftStyle").disabled = true; dir = "rtl"; $.each(e.find(".dateLong"), function () { var e = $(this); e.html(ToPersianDateLong(e.attr("date"))) }); $.each(e.find(".date"), function () { var e = $(this); e.html(ToPersianDate(e.attr("date"))) }); $.each(e.find(".dateString"), function () { var e = $(this); e.html(ToShortPersianDate(e.attr("date"))) }) } else { $("[dir=rtl]").prop("dir", "ltr"); $.each(e.find(".date"), function () { var e = $(this); var t = /-?\d+/; var n = t.exec(e.attr("date")); var r = new Date(parseInt(n[0])); e.html(r.toDateString()) }); $.each(e.find(".dateLong"), function () { var e = $(this); var t = /-?\d+/; var n = t.exec(e.attr("date")); var r = new Date(parseInt(n[0])); e.html(r.toLocaleString()) }); $.each(e.find(".dateString"), function () { var e = $(this); e.html(e.attr("date")) }); dir = "ltr"; document.getElementById("leftStyle").removeAttribute("disabled"); document.getElementById("leftStyle").disabled = false } e.find("[placeholder]").each(function () { var e = $(this); var t = $.trim(e.attr("placeholder")); if (e.attr("pml") == undefined) e.attr("pml", t); if (langs[e.attr("pml")] != undefined) e.attr("placeholder", langs[e.attr("pml")][$("#ddl_m_Language").val()]) }); $(".ui-dialog").find("[placeholder]").each(function () { var e = $(this); var t = $.trim(e.attr("placeholder")); if (e.attr("pml") == undefined) e.attr("pml", t); if (langs[e.attr("pml")] != undefined) e.attr("placeholder", langs[e.attr("pml")][$("#ddl_m_Language").val()]) }); $.each(e.find("td span,span:not(:has(*)),a:not(:has(*)),label,option,h4:not(:has(*)),thead td:not(:has(*))"), function () { var e = $(this); e.each(function () { var e = $(this); var t = e.html().split(" "); var n = ""; $.each(t, function () { var t = $.trim(this); if (textin != "" && t != "unit") { n += langs[t] == undefined ? t : e.html(e.html().replace(t, "<span mll='" + t + "' ></span>")) } }) }) }); $.each(e.find("[mll]"), function () { var e = $(this); if (e.find(".ui-button-text").length > 0) e.find(".ui-button-text").text(langs[e.attr("mll")][$("#ddl_m_Language").val()]); else { if (langs[e.attr("mll")] != undefined) e.text(langs[e.attr("mll")][$("#ddl_m_Language").val()]) } }); $.each($(".ui-dialog").find("span:not(:has(*)),a:not(:has(*)),label,option,h4:not(:has(*)),thead td:not(:has(*))"), function () { var e = $(this); e.each(function () { var e = $(this); var t = e.html().split(" "); var n = ""; $.each(t, function () { var t = $.trim(this); if (textin != "" && t != "unit") { n += langs[t] == undefined ? t : e.html(e.html().replace(t, "<span mll='" + t + "' ></span>")) } }) }) }); $.each($(".ui-dialog").find("[mll]"), function () { var e = $(this); if (e.find(".ui-button-text").length > 0) e.find(".ui-button-text").text(langs[e.attr("mll")][$("#ddl_m_Language").val()]); else { if (langs[e.attr("mll")] != undefined) e.text(langs[e.attr("mll")][$("#ddl_m_Language").val()]) } }) } function translate(e) { alert(langs[e] == undefined ? e : langs[e][$("#ddl_m_Language").val()]) } function getRadioSelectedValue(e, t) { var n = $("#" + t); if (t != undefined) return n.find("input:radio[name=" + e + "]:checked").length > 0 ? n.find("input[name=" + e + "]:checked").val() : 0; else return $("input:radio[name=" + e + "]:checked").length > 0 ? $("input[name=" + e + "]:checked").val() : 0 } function setRadioValue(e, t, n) { if (t == null) t = 0; if (n != undefined) $("#" + n).find("#" + e).find("input:radio[name='" + e + "'][value='" + t.toString() + "']").prop("checked", "checked").trigger("click"); else $("#" + e).find("input:radio[name='" + e + "'][value='" + t.toString() + "']").prop("checked", "checked").trigger("click") } function resetApp() { $.ajax({ contentType: "application/json; charset=utf-8", dataType: "json", type: "Post", url: "Management/resetApp", success: function (e) { }, error: function (e) { alert(e.responseText) } }) } function ChangeCheckBoxGroupName(e, t) { $("#" + t).find("#" + e).prop("id", e + t); e = e + t; $("#" + t).find("#" + e).find("input").each(function () { if (this.id != undefined) this.id = this.id + t; if (this.name != undefined) this.name = this.name + t }); $("#" + t).find("#" + e).find("label").each(function () { if ($(this).prop("for") != undefined) $(this).prop("for", $(this).prop("for") + t) }); $("#" + t).find("#" + e).buttonset() } var hierarchyAction; $.fn.digits = function () { return this.each(function () { $(this).text($(this).text().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")) }) }; $(document).ready(function () { setvalid("Email"); setvalid("String"); setvalid("LongString"); setvalid("Digit"); setvalid("Date"); setvalid("Phone"); setvalid("Mobile"); setvalid("Combo"); setvalid("ComboBool"); setvalid("ComboDiv"); setvalid("fileInput"); setvalid("password"); setvalid("passwordConfirm"); $("#male").on({ click: function () { selectBoxCheck($(this)) } }); $("#female").on({ click: function () { selectBoxCheck($(this)) } }); $("#txt_phone").on({ click: function () { selectBoxCheck($(this)) } }); $("#txt_mobile").on({ click: function () { selectBoxCheck($(this)) } }) }); $.fn.digits = function () { return this.each(function () { $(this).text($(this).text().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")) }) }