function getParameterByName(e) { e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var t = "[\\?&]" + e + "=([^&#]*)"; var n = new RegExp(t); var r = n.exec(window.location.href); if (r == null) return ""; else return decodeURIComponent(r[1].replace(/\+/g, " ")) } function setvalid(e) { $("[validation='" + e + "']").die(); $("[validation='" + e + "']").live({ focusout: function () { myFocusOut($(this)) }, click: function () { myClick($(this)) } }) } function validateAll(e) { var t = 0; e.find('[class*="validate"]').each(function () { if (myFocusOut($(this)) == false) t += 1 }); return t > 0 ? false : true } function selectRadioButton(e) { $("[validation=" + e.attr("validation") + "]").each(function () { var e = $("#" + this.id); if (e.is(":checked")) { e.parent().parent().removeClass().addClass("radioOn") } else { e.parent().parent().removeClass().addClass("radioOff") } }) } function selectCheckBoxShippingAddress(e) { var t = e.parent(); var n = e.children(); if (n.is(":checkbox")) { if (n.is(":checked")) { e.removeClass(); e.addClass("labelCheck checked") } else { e.removeClass(); e.addClass("labelCheck unchecked") } } } function selectBoxCheck(e) { var t = e.parent(); if (e.is(":checkbox")) { if (e.is(":checked")) { t.removeClass(); t.addClass("labelCheck checked") } else { t.removeClass(); t.addClass("labelCheck unchecked") } } else { $("[validation=" + e.attr("validation") + "]").each(function () { var e = $(this); if (e.is(":checked")) { e.parent().removeClass().addClass("labelRadio radioOn") } else { e.parent().removeClass().addClass("labelRadio radioOff") } }) } } function myFocusOut(e) { if (!e.hasClass("required") && !e.hasClass("validate")) return; var t = e.parent(); e.removeClass("ui-state-error"); e.next("#val" + e.attr("id")).remove(); e.after("<span id='val" + e.attr("id") + "'></span>"); var n = e.attr("validation"); t.find(".inputTip.tipHelp." + n).css({ display: "none", visibility: "hidden", opacity: "0" }); var r = "  <span style='display:inline' class='inputTip tipWarn String'>" + "<span class='advice required' style='display: inline;' >پر کردن این فیلد ضروری می باشد.</span></span>"; var i = " <span style='display:inline' class='inputTip tipWarn String'>" + "<span class='advice validate' style='display: inline;'>اطلاعات راصحیح وارد کنید.</span></span>"; var s = "<span class=' tipOk Digit'></span>"; if (e.attr("validation") == "comboDiv") { if (!checkValidation(e.attr("validation"))) e.next("#val" + e.attr("id")).html(r); else e.next("#val" + e.attr("id")).html(s) } else if (e.hasClass("required") && e.val() == "") { e.addClass("ui-state-error"); e.next("#val" + e.attr("id")).html(r); return false } else if (!e.hasClass("required") && e.val() == "") { e.removeClass("ui-state-error"); e.next("#val" + e.attr("id")).html(s); return true } else if (checkValidation(e.attr("validation"), e)) { e.removeClass("ui-state-error"); e.next("#val" + e.attr("id")).html(s); return true } else { e.addClass("ui-state-error"); e.next("#val" + e.attr("id")).html(i); return false } } function myClick(e) { e.next("#val" + e.attr("id")).remove(); e.parent().find(".inputTip.tipHelp." + e.attr("validation")).css({ display: "inline", visibility: "visible", opacity: "1" }) } function checkValidation(e, t) { if (e == undefined) e = t.attr("name"); var n = t.val(); switch (e) { case "email": return (new RegExp("^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$")).test(n); break; case "ComboDiv": if (t.hasClass("required")) { if (t.nextAll(".resultBar").html() == "") return false; else return true } else return true; break; case "fileInput": return (new RegExp(/^[a-zA-Z0-9-اآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي\s _.:\\]+$/)).test(n); break; case "Combo": if (n == "" || n == "-") return false; else return true; break; case "ComboBool": if (n == "false" || n == "true") return true; else return false; break; case "LongString": return true; break; case "String": return (new RegExp(/^([a-zA-Zاآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي]+[\s ]?[a-zA-Zاآبپتثجچحخدذرزژسشصضطظعغفقکگلمنوهیءّئءأإؤي]*)$/)).test(n); break; case "Digit": return (new RegExp(/^([0-9]+)$/)).test(n); break; case "Date": return (new RegExp(/^[1-4]\d{3}\/((0?[1-6]\/((3[0-1])|([1-2][0-9])|(0?[1-9])))|((1[0-2]|(0?[7-9]))\/(30|([1-2][0-9])|(0?[1-9]))))$/)).test(n); break; case "Mobile": if (t.parents("table").find("ul[id=mobiles]").find("li").length > 0) return true; return (new RegExp(/^((091)[0-9]\d{7}$)|^((093)[1-9]\d{7}$)/)).test(n); break; case "Phone": if (t.parents("table").find("ul[id=phones]").find("li").length > 0) return true; return (new RegExp(/^((0)[1-9]\d{9}$)/)).test(n); break; case "Email": return (new RegExp(/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/)).test(n); break; case "password": case "newPassword": case "ctrlPassword": return n.length >= 1 ? true : false; break; case "passwordConfirm": return n == t.parents("table").find("[validation=password]").val() && n != "" ? true : false; break; case "emailConfirm": return n == $("#newEmail").val() && n != "" ? true : false; break; default: return "" } } function chkPhone(e, t) { var n = new RegExp("^[0-9]{11}$"); if (n.test(e)) { document.getElementById("er0" + t).style.visibility = "hidden"; document.getElementById("ok0" + t).style.visibility = "visible" } else { document.getElementById("ok0" + t).style.visibility = "hidden"; document.getElementById("er0" + t).style.visibility = "visible" } } function chkMail(e) { var t = new RegExp("^[0-9a-zA-Z]+@[0-9a-zA-Z]+[.]{1}[0-9a-zA-Z]+[.]?[0-9a-zA-Z]+$"); var n = t.test(e); if (n) { document.getElementById("er01").style.visibility = "hidden"; document.getElementById("ok01").style.visibility = "visible" } else { document.getElementById("ok01").style.visibility = "hidden"; document.getElementById("er01").style.visibility = "visible" } return n } function chkPass(e, t) { if (t == "1") { pass1 = e; if (e != "") { document.getElementById("er02").style.visibility = "hidden"; document.getElementById("ok02").style.visibility = "visible" } else if (e == "") { document.getElementById("ok02").style.visibility = "hidden"; document.getElementById("er02").style.visibility = "visible" } } else if (t == "2") { if (e == pass1 && pass1 != "") { document.getElementById("er03").style.visibility = "hidden"; document.getElementById("ok03").style.visibility = "visible" } else { document.getElementById("ok03").style.visibility = "hidden"; document.getElementById("er03").style.visibility = "visible" } } } function chkLen(e, t) { if (e != "") { document.getElementById("er" + t).style.visibility = "hidden"; document.getElementById("ok" + t).style.visibility = "visible" } else if (e == "") { document.getElementById("ok" + t).style.visibility = "hidden"; document.getElementById("er" + t).style.visibility = "visible" } } function tip(e, t) { if (e == "show") { document.getElementById("tip" + t).style.visibility = "visible" } else if (e == "hide") { document.getElementById("tip" + t).style.visibility = "hidden" } } function IsEmail(e) { var t = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/; return t.test(e) } function getTestData() { var e = "test"; $.ajax({ type: "POST", url: "/Login/getTestData2", data: "{test:'" + e + "'}", contentType: "application/json; charset=utf-8", success: function (e) { alert(e) }, error: function (e) { alert(e) } }) } function onclickloginLink() { $("#divlogindialog").dialog({ width: "650px" }).dialog("open"); $("#divlogindialog").removeClass("invisible") } function GetPersonInfo() { $.ajax({ contentType: "application/json; charset=utf-8", type: "Post", url: "/Account/GetPersonInfo", success: function (e) { if (e.isdone) { $("#gh-ug").html("<a id='a_UserProfile' href='../Account/Profile'>" + e.name + " " + e.family + "</a>  خوش آمدید!   " + "<a href='../Account/LogOff'>خروج</a>") } }, error: function (e) { alert(e.responseText) } }) } function LogOutUser() { $.ajax({ contentType: "application/json; charset=utf-8", type: "Post", url: "/Account/LogOutUser", success: function (e) { if (e.isdone) { $("#gh-ug").html("<a href='../Account/LogOn'>ورود</a> | <a href='../Account/Register'>عضویت</a>") } }, error: function (e) { alert(e.responseText) } }) } function bindHierarchyData(e) { var t = "انتخاب"; if (e.headertext != undefined) t = e.headertext; var n = "selectHierarchy"; if (e.canmodify) n = "selectsmall1 validate"; if (e.css != undefined) n = e.css; var r = "0"; if (e.startlevel != undefined) r = e.startlevel; var i = "0"; if (e.parentid != undefined) i = e.parentid; var s = 20; if (e.depth != undefined) s = e.depth; if (e.container != undefined) var o = $("#" + e.container).find("#" + e.id); else var o = $("#" + e.id); var u = false; if (e.canmodify != undefined) u = e.canmodify; o.html(""); if (u) { o.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<a  href='#'><span title='رست' class='hReset unit HierarchyImage ui-icon ui-icon-refresh'></span></a>" + "<select    id='hierarchyAddress' class=' " + n + " ' validation='ComboDiv' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input   type='text' class='inputText inputW50'  />" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a>" + "<a  class='hEdit' href='#'><span title='ویرایض' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else { o.append("<a href='#'><span title='رست' class='hReset unit HierarchyImage ui-icon ui-icon-refresh'></span></a>" + "<select   id='hierarchyAddress' class='" + n + "' validation='ComboDiv' ></select>" + " <div  class='resultBar'></div>") } var a = o.find("select"); a.unbind().bind("change", function () { onOptionChanged(this, e.table, s, o) }); o.find(".hReset").unbind().bind("click", function () { Resetbut_onclick(o, e.table, r, i, t, e.resetid) }); o.find(".hExpand").unbind().bind("click", function () { if ($(this).hasClass("ui-icon-circle-triangle-s")) { $(this).removeClass("ui-icon-circle-triangle-s").addClass("ui-icon-circle-triangle-n").prop("title", "بسته") } else if ($(this).hasClass("ui-icon-circle-triangle-n")) $(this).removeClass("ui-icon-circle-triangle-n").addClass("ui-icon-circle-triangle-s").prop("title", "باز"); o.find(".editBox").toggle() }); o.find(".hDelete").unbind().bind("click", function () { Delete_onclick(o, e.table, t) }); o.find(".hAdd").unbind().bind("click", function () { Add_onclick(o, e.table) }); o.find(".hEdit").unbind().bind("click", function () { Update_onclick(o, e.table) }); if (e.parentid != undefined) { BindParents(o, e.table, e.parentid, r); return } ajHierarchy = $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + (e.parentid == undefined ? "" : e.parentid) + "', table: '" + e.table + "'}", contentType: "application/json; charset=utf-8", success: function (e) { BindOptionsHtml(e, a); setSelectedValueID(o) }, error: function (e) { alert(e.responseText) } }) } function onOptionChanged(e, t, n, r) { var i = $(e).val(); var s = $(e).selectedOptions()[0].text; var o = 0; var u = r.prop("id"); $("a[name='hiddenOption']").each(function () { o = o + 1 }); if (i != "-" && o < n) { var a = r.find(".resultBar"); a.append("<span class='spanAction' name='hiddenOption' id='" + i + "'>" + s + " > </span>"); a.find("#" + i).click(function () { onOptionClicked(r, i, t) }); if (o + 1 < n) { $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + r.find(".resultBar span").last().prop("id") + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (e) { BindOptionsHtml(e, r.find("select")); setSelectedValueID(r) } }) } } } function onOptionClicked(e, t, n) { $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + t + "', table: '" + n + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindOptionsHtml(n, e.find("select"), false); var r = e.find(".resultBar span"); while (e.find(".resultBar span").last() != null && e.find(".resultBar span").last().prop("id") != t) { e.find(".resultBar span").last().remove() } setSelectedValueID(e) } }) } function BindOptionsHtml(response, $hrSelect, isAdd, isParents) { if (!isAdd) { var Details; if (isParents) Details = response; else Details = typeof response.d == "string" ? eval("(" + response.d + ")") : response.d } $hrSelect.removeOption(/./).addOption("-", " انتخاب "); if (Details != undefined) for (var j = 0; j < Details.length; j++) { var val = Details[j]; var text = val.value; var value = val.id; $hrSelect.addOption(value, text, false) } } function setSelectedValueID(e) { e.find("#selectedValue").remove(); e.append("<input name='selectedValue' id='selectedValue' type='hidden' />"); if (e.find(".resultBar span").last() != null) e.find("#selectedValue").val(e.find(".resultBar span").last().prop("id")); else { if ($("#startLevelID").val() != null) e.find("#selectedValue").val($("#startLevelID").val()); else e.find("#selectedValue").val(null) } } function BindParents($hrDiv, tableName, selectedValue, startLevel, options) { $.ajax({ type: "POST", url: "/Hierarchy/GetParents", data: "{parentID: '" + selectedValue + "', table: '" + tableName + "', StartLevel: '" + startLevel + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (response) { if (!isAuthenticated(response)) return; if (response.d != null) { var Details = typeof response.parents == "string" ? eval("(" + response.parents + ")") : response.parents; if (options != undefined && options.isRaw) { for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var id = val[1]; $hrDiv.append("<span >" + val[0] + " > </span>") } $hrDiv.append(options.concat) } else { BindOptionsHtml(response.body, $hrDiv.find("select"), false, true); var $resultBar = $hrDiv.find(".resultBar"); $resultBar.find("span").remove(); { for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var id = val[1]; $resultBar.append("<span class='spanAction' name='hiddenOption' id='" + id + "' >" + val[0] + " > </span>"); $resultBar.find("[class=spanAction]").click(function () { onOptionClicked($hrDiv, $(this).attr("id"), tableName) }) } } } setSelectedValueID($hrDiv) } } }) } function Resetbut_onclick(e, t, n, r, i, s) { if (s != undefined) { BindParents(container, t, s, n); return } $.ajax({ type: "POST", url: "/Hierarchy/Get", data: "{parentID: '" + "" + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (t) { e.find(".resultBar span").remove(); BindOptionsHtml(t, e.find("select"), false); setSelectedValueID(e) } }) } function Delete_onclick(e, t, n) { $.ajax({ type: "POST", url: "/Hierarchy/Delete", data: "{parentID: '" + e.find(".resultBar span").last().prop("id") + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (t) { if (t.isDone != undefined && !t.isDone) { alert(t.msg); return } BindOptionsHtml(t, e, false); e.find(".resultBar span").last().remove(); if (e.find(".resultBar span").last().length > 0) e.find("span.text").html(e.find(".resultBar span").last().html().replace("&gt;&gt;", "")); else e.find("span.text").html(n); setSelectedValueID(e) }, error: function (e) { alert(e) } }) } function Add_onclick(e, t) { var n; if (e.find(".resultBar span").last().length > 0) n = e.find(".resultBar span").last().prop("id"); else n = 0; $.ajax({ type: "POST", url: "/Hierarchy/Add", data: "{parentID: '" + n + "', value: '" + e.find(".inputText").val() + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (n) { if (n.isDone != undefined && !n.isDone) { alert(n.msg); return } var r = e.find(".resultBar"); r.append("<span class='spanAction' name='hiddenOption' id='" + n.id + "' >" + n.value + " > </span>"); r.find("#" + n.id).click(function () { onOptionClicked(e, n.id, t) }); BindOptionsHtml(n, e.find("select"), true); setSelectedValueID(e); e.find(".inputText").val("") } }) } function Update_onclick(e, t) { $.ajax({ type: "POST", url: "/Hierarchy/Update", data: "{parentID: '" + e.find(".resultBar span").last().prop("id") + "', value: '" + e.find(".inputText").val() + "', table: '" + t + "'}", contentType: "application/json; charset=utf-8", success: function (t) { if (t.isDone != undefined && !t.isDone) { alert(t.msg); return } e.find(".resultBar span").last().html(e.find(".inputText").val() + "&gt;&gt;"); e.find("span.text").html(e.find(".inputText").val()); setSelectedValueID(e) } }) } function getHierarchySelectedValue(e, t) { if (t != undefined) return $("#" + t).find("#" + e).find("#selectedValue").val() == undefined ? null : $("#" + t).find("#" + e).find("#selectedValue").val(); else return $("#" + e).find("#selectedValue").val() == undefined ? null : $("#" + e).find("#selectedValue").val() } function bindRawDropDownData(e) { var t = "انتخاب"; if (e.headertext != undefined) t = e.headertext; if (e.container != undefined) var n = $("#" + e.container).find("#" + e.id); else var n = $("#" + e.id); var r = false; if (e.canmodify != undefined) r = e.canmodify; var i = "selectHierarchy"; if (e.canmodify) i = "selectsmall validate"; if (e.css != undefined) i = e.css; var s = true; if (e.async != undefined) s = e.async; if (r) { n.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<select   id='hierarchyAddress' class=' " + i + " ' name='Combo' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input   type='text' class='inputText inputW50'  />" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a>" + "<a  class='hEdit' href='#'><span title='ویرایش' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else { n.append("<select   id='hierarchyAddress' class=' " + i + "' name='Combo' ></select>") } var o = n.find("select"); n.find(".hExpand").unbind().bind("click", function () { if ($(this).hasClass("ui-icon-circle-triangle-s")) $(this).removeClass("ui-icon-circle-triangle-s").addClass("ui-icon-circle-triangle-n"); else if ($(this).hasClass("ui-icon-circle-triangle-n")) $(this).removeClass("ui-icon-circle-triangle-n").addClass("ui-icon-circle-triangle-s"); n.find(".editBox").toggle() }); n.find(".hDelete").unbind().bind("click", function () { DeleteRaw_onclick(n, e) }); n.find(".hAdd").unbind().bind("click", function () { AddRaw_onclick(n, e) }); n.find(".hEdit").unbind().bind("click", function () { UpdateRaw_onclick(n, e) }); ajHierarchy = $.ajax({ type: "POST", url: "/XmlDropDown/GetComboItemsRaw", async: s, data: "{table: '" + e.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (t) { if (!isAuthenticated(t)) return; BindRawOptionsHtml(t, o, e) } }) } function BindRawOptionsHtml(response, $hrSelect, options) { var Details = typeof response == "string" ? eval("(" + response + ")") : response; $hrSelect.removeOption(/./).addOption("", options.headertext); if (Details.length < 1) return; for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var text = val.value; if (options.istext) var value = val.value; else var value = val.id; $hrSelect.addOption(value, text, false) } } function AddRaw_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/AddRaw", data: "{value: '" + e.find(".inputText").val() + "', table: '" + t.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (n) { if (!isAuthenticated(n)) return; BindRawOptionsHtml(n, e.find("select"), t); e.find(".inputText").val("") } }) } function UpdateRaw_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/UpdateRaw", data: "{id:'" + e.find("select").val() + "',value: '" + e.find(".inputText").val() + "', table: '" + t.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (n) { if (!isAuthenticated(n)) return; BindRawOptionsHtml(n, e.find("select"), t); e.find(".inputText").val("") } }) } function DeleteRaw_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/DeleteRaw", data: "{id: '" + e.find("select").val() + "', table: '" + t.path + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (n) { if (!isAuthenticated(n)) return; BindRawOptionsHtml(n, e.find("select"), t); e.find(".inputText").val("") } }) } function bindXmlDropDownData(e) { var t = "انتخاب"; if (e.headertext != undefined) t = e.headertext; if (e.container != undefined) var n = $("#" + e.container).find("#" + e.id); else var n = $("#" + e.id); var r = false; if (e.canmodify != undefined) r = e.canmodify; var i = "selectHierarchy"; if (e.canmodify) i = "selectsmall validate"; if (e.css != undefined) i = e.css; var s = true; if (e.async != undefined) s = e.async; if (r) { n.append("<a  href='#'> <span title='باز' class='hExpand unit HierarchyImage ui-icon ui-icon-circle-triangle-s'  ></span></a>" + "<select   id='hierarchyAddress' class=' " + i + " ' name='Combo' ></select>" + "<div  class='resultBar'></div><div  class='editBox invisible' style='padding-top:20px;'>  " + "<input   type='text' class='inputText inputW50'  />" + "<a  class='hAdd' href='#'> <span title='اضافه' class=' unit  ui-icon ui-icon-plusthick'></span></a>" + "<a  class='hDelete' href='#'> <span title='حذف' class=' unit  ui-icon ui-icon-trash'></span></a>" + "<a  class='hEdit' href='#'><span title='ویرایش' class=' unit  ui-icon ui-icon-pencil'></span></a></div>") } else { n.append("<select   id='hierarchyAddress' class=' " + i + "' name='Combo' ></select>") } var o = n.find("select"); n.find(".hExpand").unbind().bind("click", function () { if ($(this).hasClass("ui-icon-circle-triangle-s")) $(this).removeClass("ui-icon-circle-triangle-s").addClass("ui-icon-circle-triangle-n"); else if ($(this).hasClass("ui-icon-circle-triangle-n")) $(this).removeClass("ui-icon-circle-triangle-n").addClass("ui-icon-circle-triangle-s"); n.find(".editBox").toggle() }); n.find(".hDelete").unbind().bind("click", function () { DeleteXml_onclick(n, e) }); n.find(".hAdd").unbind().bind("click", function () { AddXml_onclick(n, e) }); n.find(".hEdit").unbind().bind("click", function () { UpdateXml_onclick(n, e) }); ajHierarchy = $.ajax({ type: "POST", url: "/XmlDropDown/GetComboItems", async: s, data: "{path: '" + e.path + "'}", contentType: "application/json; charset=utf-8", success: function (t) { BindXmlOptionsHtml(t, o, e) } }) } function BindXmlOptionsHtml(response, $hrSelect, options) { var Details = typeof response == "string" ? eval("(" + response + ")") : response; $hrSelect.html(""); $hrSelect.append("<option value=''>" + options.headertext + "</option>"); for (var j = 0; j < Details.length; j++) { var val = Details[0, j]; var text = val.name; if (options.istext) var value = val.name; else var value = val.id; $hrSelect.append("<option value='" + value + "'>" + text + "</option>") } } function AddXml_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/Add", data: "{value: '" + e.find(".inputText").val() + "', path: '" + t.path + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindXmlOptionsHtml(n, e.find("select"), t); e.find(".inputText").val("") } }) } function UpdateXml_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/Update", data: "{id:'" + e.find("select").val() + "',value: '" + e.find(".inputText").val() + "', path: '" + t.path + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindXmlOptionsHtml(n, e.find("select"), t); e.find(".inputText").val("") } }) } function DeleteXml_onclick(e, t) { $.ajax({ type: "POST", url: "/XmlDropDown/Delete", data: "{id: '" + e.find("select").val() + "', path: '" + t.path + "'}", contentType: "application/json; charset=utf-8", success: function (n) { BindXmlOptionsHtml(n, e.find("select"), t); e.find(".inputText").val("") } }) } function getFullAcountList(e, t) { if (sortid == "" || sortid == null) sortid = "date desc"; var n = $("#" + e); if (t.page_index > 0) t.first = false; var r = $("#PageSize").val(); var i = "", s = "", o = "", u = "", a = "", f = "", l = "", c = "", h = ""; var p = n.find("#ddlSearchBy1").val(); if (p != "") { if (p == "Code") { code = n.find("#txtSearch1").val() } if (p == "EmployeeName") { s = n.find("#txtSearch1").val() } if (p == "InvoiceNumber") { i = n.find("#txtSearch1").val() } if (p == "shop") { o = n.find("#txtSearch1").val() } if (p == "productBarcode") { a = n.find("#txtSearch1").val() } } if (n.find("#txt_s_PriceFrom").length > 0) f = n.find("#txt_s_PriceFrom").val(); if (n.find("#txt_s_PriceTo").length > 0) l = n.find("#txt_s_PriceTo").val(); c = n.find("#txtInvoiceDateStart").val(); h = n.find("#txtInvoiceDateEnd").val(); var d = { sort: sortid, EmployeeName: s, shop: o, Barcode: a, InvoiceDateStart: c, InvoiceDateEnd: h, PriceFrom: f, PriceTo: l, InvoiceNumber: i }; t["DTO"] = d; pageselectCallback(0, t, { container: "", fname: t.fname, pagingContainer: e, first: true, isOrder: true }) } function pageselectCallback(e, t, n) { var r = $("#" + n.pagingContainer); if (n.container != "") var i = $("#" + n.container + n.pagingContainer); else var i = r; if (e > 0) { n.first = false } else if (n.first) { n["params"] = t; if (i.find("#PageSize").val() != undefined) i.find("#PageSize").die().live("change", function () { n.params.callbackmethod(n.pagingContainer, t) }); else r.find("#PageSize").die().live("change", function () { n.params.callbackmethod(n.pagingContainer, t) }) } var s = n.params.DTO; if (i.find("#PageSize").val() != undefined) var o = i.find("#PageSize").val(); else var o = r.find("#PageSize").val(); var u = ""; var a = o; var f = e == 0 ? 0 : e * a; s["skip"] = f; s["take"] = a; var l = n.params.DTO.sort; var c = n.params.DTO.shop; var h = n.params.DTO.EmployeeName; var p = n.params.DTO.Barcode; var d = n.params.DTO.InvoiceDateStart; var v = n.params.DTO.InvoiceDateEnd; var m = n.params.DTO.PriceFrom; var g = n.params.DTO.PriceTo; var y = n.params.DTO.InvoiceNumber; $.ajax({ data: $("form").serialize() + "&skip=" + f + "&take=" + a + "&shop=" + c + "&sort=" + l + "&EmployeeName=" + h + "&Barcode=" + p + "&InvoiceDateStart=" + d + "&InvoiceDateEnd=" + v + "&PriceFrom=" + m + "&PriceTo=" + g + "&first=" + n.first + "&InvoiceNumber=" + y, type: "Post", url: "/" + n.params.servicename + "/" + n.params.methodname, dataType: "json", success: function (t) { if (t.count == 1 && n.isOrder == true && n.container != "") { n.fname(null, n.pagingContainer, t.results[0].Barcode) } else { if (e < 1 && n.first) { var r = getPageOptions({ params: n.params, count: t.count, container: "", fname: n.fname, pagingContainer: n.pagingContainer, callBackName: pageselectCallback }); i.find("#paging").pagination(t.count, r); n.params.build(t, n); if (n.container != "") i.dialog({ width: 650 }).dialog("open") } else n.params.build(t, n); newSort(n.params.callbackmethod, n.pagingContainer, n.params) } }, error: function (e) { e.responseText } }) } function getPageOptions(e) { if (e.container != "") var t = $("#" + e.container); else var t = $("#" + e.pagingContainer); var n = { callback: e.callBackName }; t.find("input:text").each(function () { n[this.name] = this.className.match(/numeric/) ? parseInt(this.value) : this.value }); n.prev_show_always = false; n.next_show_always = false; if (e.count < t.find("#PageSize").val()) t.find("#PageSize").css("display", "none"); else { t.find("#PageSize").css("display", "inline") } n.items_per_page = t.find("#PageSize").val(); n.prev_text = "<<-قبلی"; n.next_text = "بعدی->>"; n.container = e; return n } function buildFullAcountList(jq, container) { var $con = $("#shopBuy"); var table = {}; var lstb = []; var lsth = []; var details = {}; lsth.push({ title: "تاریخ", width: "10%", sort: "Date" }); lsth.push({ title: "شماره فاکتور", width: "11%", sort: "InvoiceNO" }); lsth.push({ title: "شرح", width: "13%" }); lsth.push({ title: "بستانکار", width: "12%", sort: "Amount" }); lsth.push({ title: "بدهکار", width: "12%", sort: "Amount" }); lsth.push({ title: "باقیمانده", width: "12%", sort: "Amount" }); lsth.push({ title: "فروشگاه", width: "10%", sort: "inv_Shop.Name" }); if (!container.params.print) { lsth.push({ title: "جزئیات و کالاها" }) } var List = typeof jq.results == "string" ? eval("(" + jq.results + ")") : jq.results; var ItemList = ""; if (List != null) for (var i = 0; i < List.length; i++) { var val = List[0, i]; var trBody = {}; if (!container.params.print) trBody[0] = { trId: val.id, trName: val.detail }; trBody[1] = { name: "date", html: val.date, width: "15%" }; trBody[2] = { name: "InvoiceNO", html: val.InvoiceNO, width: "12%" }; trBody[3] = { name: "description", html: "<span>" + val.inOrderOf + "</span>", width: "15%" }; trBody[4] = { name: "Debtor", html: val.isSell == true ? val.amount : "", width: "10%" }; trBody[5] = { name: "Creditor", html: val.isSell == true ? "" : "<span>" + val.amount + "</span>", width: "10%" }; trBody[6] = { name: "balance", html: val.balance, width: "12%" }; trBody[7] = { name: "shop", html: val.shopName == null ? "---" : val.shopName, width: "7%" }; lstb.push(trBody) } table = { header: lsth, body: lstb, details: { detailsFunction: FullAcountDetails }, heigth: 300, container: "shopBuyTable", divName: "ordersInfo", hasFooter: false, servicename: "Account", methodname: "GetCurrentUserOrders", buildFunction: buildFullAcountList }; $("#sumDebtor").html(jq.sumDebtor != null ? jq.sumDebtor : 0); $("#sumCreditor").html(jq.sumCreditor != null ? jq.sumCreditor : 0); $("#sumBalance").html(jq.balance != null ? Math.round(jq.balance, 1) : 0); $("#sumPayment").html(jq.sumPayment != null ? jq.sumPayment : 0); $("#sumReceive").html(jq.sumReceive != null ? jq.sumReceive : 0); buildTable(table) } function buildOnlineOrdersList(jq, container) { var $con = $("#onlineBuy"); var table = {}; var lstb = []; var lsth = []; var details = {}; lsth.push({ title: "تاریخ", width: "15%", sort: "Date" }); lsth.push({ title: "شماره فاکتور", width: "12%", sort: "InvoiceNO" }); lsth.push({ title: "شرح", width: "25%" }); lsth.push({ title: "مبلغ", width: "20%", sort: "Amount" }); lsth.push({ title: "فروشگاه", width: "15%", sort: "inv_Shop.Name" }); if (!container.params.print) { lsth.push({ title: "جزئیات و کالاها" }) } var List = typeof jq.results == "string" ? eval("(" + jq.results + ")") : jq.results; if (List.length > 0) { $("#accountDetails").removeClass("hidden") } else $("#accountDetails").addClass("hidden"); var ItemList = ""; if (List != null) for (var i = 0; i < List.length; i++) { var val = List[0, i]; var trBody = {}; if (!container.params.print) trBody[0] = { trId: val.id, trName: val.detail }; trBody[1] = { name: "date", html: val.date, width: "15%" }; trBody[2] = { name: "InvoiceNO", html: val.InvoiceNO, width: "12%" }; trBody[3] = { name: "description", html: "<span>" + val.inOrderOf + "</span>", width: "25%" }; trBody[5] = { name: "Creditor", html: val.isSell == true ? "" : "<span>" + val.amount + "</span>", width: "20%" }; trBody[7] = { name: "shop", html: val.shopName == null ? "---" : val.shopName, width: "15%" }; lstb.push(trBody) } table = { header: lsth, body: lstb, details: { detailsFunction: OnlineOrderDetails }, heigth: 300, container: "onlineBuyTable", divName: "nOrdersInfo", hasFooter: false, servicename: "Account", methodname: "GetCurrentUserOnlineOrders", buildFunction: buildOnlineOrdersList }; $("#sumNetCreditor").html(jq.sumDebtor); buildTable(table) } function FullAcountDetails(e, t) { $con = $("#" + t); $dis = $(e); $("#voucherDetailsList" + t + "," + "#DetailPaymentList" + t + "," + "#dialog" + t).dialog().dialog("close"); if ($dis.parents("tr").attr("name") == "payment") ListDetailPayment($dis.parents("tr").prop("id").replace("tr", ""), t); else if ($dis.parents("tr").attr("name") == "order") SelectDetailInvoice($dis.parents("tr").prop("id").replace("tr", ""), t); else if ($dis.parents("tr").attr("name") == "voucher") VoucherDetailsFullAccount($dis.parents("tr").prop("id").replace("tr", ""), t) } function OnlineOrderDetails(dis, container) { $con = $("#" + container); $dis = $(dis); var $invoiceDetail = $("#onlineOrderDetails"); var id = $dis.parents("tr").prop("id").replace("tr", ""); $.ajax({ type: "POST", url: "/Account/GetOnlineDetailInvoice", contentType: "application/json; charset=utf-8", data: "{id: '" + id + "'}", success: function (response) { $("#receiverName").html(response.receiverName); $("#postType").html(response.postType); $("#dateTime").html(response.dateTime); $("#isgiftDescription").html(response.isgiftDescription); $("#phoneMobile").html(response.phoneMobile); $("#paymentType").html(response.paymentType); $("#receiverAddress").html(response.receiverAddress); $("#referenceId").html(response.referenceId); jq = response.d; var List = typeof jq == "string" ? eval("(" + jq + ")") : jq; var ItemList = ""; for (var i = 0; i < List.length; i++) { var val = List[0, i]; val.appName = val.appName == null ? "/" : val.appName; ItemList += "<tr id='tr" + val.OrderDetailId + "'>" + "<td name='name' id='" + val.BarcodeId + "' width='17%'><span class='cursor' name='subTab' menuName='a_InventoryList' id='" + val.BarcodeId + "'>" + (val.Barcode == null ? "" : val.Barcode + "_") + (val.Name == null ? "" : val.Name) + (val.Description == null ? "" : "_" + val.Description) + (val.ItemCode == null ? "" : "_" + val.ItemCode) + "</span></td>" + "<td name='Color' width='10%'><div id='Color'>" + (val.Color == null ? "" : val.Color) + "</div></td>" + "<td name='Size' width='10%'><div id='Size'>" + (val.Size == null ? "" : val.Size) + "</div></td>" + "<td name='Quantity' width='7%'><div id='Quantity'>" + (val.Quantity == null ? "" : val.Quantity) + "  " + (val.UnitType == null ? "" : val.UnitType) + "</div></td>" + "<td name='Price' width='10%'><div id='Price'>" + (val.Price == null ? "" : val.Price) + "</div></td>" + "<td name='TotalPrice' width='10%'><div id='TotalPrice'>" + val.Quantity * val.Price + "</div></td>" + "<td name='Serial' width='10%'><div id='Serial'>" + (val.Serial == null ? "" : val.Serial) + "</div></td>" + "<td name='image' width='10%' ><img class='imagefortable' src='http://shirazrose.com/Data/" + val.appName + "Photos/" + val.Barcode + "/tiny_1.jpg'></td>" + "<tr>" } $invoiceDetail.find("#onlineDetailListInvoice").html(ItemList); $invoiceDetail.removeClass("invisible"); $invoiceDetail.dialog({ width: 1e3 }).dialog("open") }, error: function (e) { alert(e.responseText) } }) } function buildTable(e) { $con = $("#" + e.container); var t = 300; if (e.heigth != undefined) t = e.heigth; var n = "<table class='table'><thead><tr class='ui-state-default'>"; var r = "<tfoot><tr>"; $.each(e.header, function () { if (e.hasFooter) { if (this.footer != undefined) r += "<td " + (this.width != undefined ? "width='" + this.width + "'" : " ") + ">" + this.footer + "</td>"; else r += "<td " + (this.width != undefined ? "width='" + this.width + "'" : "") + "></td>" } if (this.sort != undefined) { var t = ""; var i = sortid.split(" "); if (i[0] == this.sort) t = i[1]; n += "<td " + (this.width != undefined ? "width='" + this.width + "'" : " ") + " ><a href='javascript:void(0);' id='" + this.sort + "' rel='sort' class='sorted " + t + "' >" + this.title + "</a></td>" } else n += "<td " + (this.width != undefined ? "width='" + this.width + "'" : " ") + " ><span >" + this.title + "</span></td>" }); n += "</tr></thead>"; n += "<tbody>"; var i = 0; $.each(e.body, function () { var t = this[0].trId; var r = ""; r = this[0].trName; if (r != "") n += "<tr name='" + r + "' id='tr" + t + "'>"; else n += "<tr id='tr" + t + "'>"; $.each(this, function () { if (this.subId != undefined) { n += "<td " + (this.width != undefined ? "style='width:" + this.width + "'" : " ") + (this.tooltip != undefined ? "title='" + this.html : "") + "' name='" + this.name + "' ><span class='cursor' menuName='" + this.menuName + "' name='subTab' id='" + this.subId + "'>" + (this.tooltip == undefined ? this.html : this.html.substring(0, this.tooltip) + "...") + "</span></td>" } else if (this.trId == undefined && this.props == undefined) { if (this.id != undefined) n += "<td " + (this.width != undefined ? "style='width:" + this.width + "'" : " ") + (this.tooltip != undefined ? "title='" + this.html : "") + "' name='" + this.name + "' id='" + this.id + "'>" + (this.tooltip == undefined ? this.html : this.html.substring(0, this.tooltip) + "...") + "</td>"; else if (this.id == undefined) n += "<td " + (this.width != undefined ? "style='width:" + this.width + "'" : " ") + (this.tooltip != undefined ? "title='" + this.html : "") + "' name='" + this.name + "'>" + (this.tooltip == undefined ? this.html : this.html.substring(0, this.tooltip) + "...") + "</td>" } }); if (e.details.editFunction != undefined) { n += "<td style='text-align: center!important;'><button id='btnEdit'>ویرایش</button>" } if (e.details.deleteFunction != undefined) n += "<td id='delete' style='text-align: center!important;'><button id='btnDelete'>حذف</button></td>"; if (e.details.detailsFunction != undefined) n += "<td style='text-align: center!important;'><button id='btnDetails'>جزئیات</button></td>"; else n += "</td>"; n += "</tr>"; i++ }); n += "</tbody>"; if (e.hasFooter) { n += r; n += "</tr></tfoot>" } n += "</table>"; $con.find("#" + e.divName).html(n); $con.find("[id=btnEdit]").button({ icons: { primary: "ui-icon-pencil" }, text: false }).unbind().click(function () { var t = this; e.details.editFunction(this, e.container) }); $con.find("[id=btnDelete]").button({ icons: { primary: "ui-icon-closethick" }, text: false }).unbind().click(function () { var t = this; e.details.deleteFunction($(this).parents("tr").attr("id").replace("tr", ""), e.container) }); $con.find("[id=btnDetails]").button({ icons: { primary: "ui-icon-plus" }, text: false }).unbind().click(function () { var t = this; e.details.detailsFunction(this, e.container) }); $con.find("[id=btnConfirm]").button({ icons: { primary: "ui-icon-check" }, text: false }).unbind().click(function () { var t = this; e.details.confirmFunction(this, e.container) }); if (e.details != undefined) { if (e.details.rowClick != undefined) { $con.find("tr[id*=tr]").find("td:not([id=delete])").click(function () { e.details.rowClick($(this).parent("tr"), e.container.replace("dialog", "")) }).addClass("cursor") } } newSort(getFullAcountList, e.container, { container: e.container, callbackmethod: getFullAcountList, fname: "", page_index: 0, build: e.buildFunction, servicename: e.servicename, methodname: e.methodname, print: false }) } function ListDetailPayment(OrderHeaderId, container) { var $con = $("#" + container); $DetailPaymentList = $("#DetailPaymentList"); $.ajax({ data: $("form").serialize() + "&OrderHeaderId=" + OrderHeaderId, dataType: "json", type: "Post", url: "/Account/GetDetailPaymentList", success: function (response) { var List = typeof response == "string" ? eval("(" + response.dp[0] + ")") : response.dp[0]; var ItemCash = ""; for (var i = 0; i < List.cash.length; i++) { var val = List.cash[0, i]; if (val.Amount > 0) { ItemCash += "<tr id='tr" + val.CashId + "'>" + "<td width='50%' name='PaymentNO' >" + val.Amount + "  " + val.Currency + "</td>" + "<td width='40%'>" + val.Type + "</td></tr>" } } $DetailPaymentList.find("#CashList").html(ItemCash); if (ItemCash != "") { $DetailPaymentList.find("#tablecash").removeClass("invisible") } else { $DetailPaymentList.find("#tablecash").addClass("invisible") } ItemCheque = ""; for (var i = 0; i < List.cheque.length; i++) { var val = List.cheque[0, i]; if (val.Amount > 0) { ItemCheque += "<tr id='tr" + val.ChequeId + "'>" + "<td name='PaymentNO' width='20%'>" + val.Amount + "  " + val.Currency + "</td>" + "<td  width='20%'>" + val.Bank + "</td>" + "<td  width='15%'>" + val.Serial + "</td>" + "<td id='status'  width='15%'>" + val.Passed + "</td>" + "<td  width='20%'>" + val.Date + "</td></tr>" } } $DetailPaymentList.find("#ChequeList").html(ItemCheque); if (ItemCheque != "") { $DetailPaymentList.find("#tablecheque").removeClass("invisible") } else { $DetailPaymentList.find("#tablecheque").addClass("invisible") } $DetailPaymentList.dialog({ width: "300px" }).dialog("open") }, error: function (e) { alert(e.responseText) } }) } function SelectDetailInvoice(id, container) { var $con = $("#" + container); var $invoiceDetail = $("#dialog"); $.ajax({ type: "POST", url: "/Account/GetDetailInvoice", contentType: "application/json; charset=utf-8", data: "{id: '" + id + "'}", success: function (response) { jq = response.d; var List = typeof jq == "string" ? eval("(" + jq + ")") : jq; var ItemList = ""; for (var i = 0; i < List.length; i++) { var val = List[0, i]; val.appName = val.appName == null ? "/" : val.appName; ItemList += "<tr id='tr" + val.OrderDetailId + "'>" + "<td name='name' id='" + val.BarcodeId + "' width='17%'><span class='cursor' name='subTab' menuName='a_InventoryList' id='" + val.BarcodeId + "'>" + (val.Barcode == null ? "" : val.Barcode + "_") + (val.Name == null ? "" : val.Name) + (val.Description == null ? "" : "_" + val.Description) + (val.ItemCode == null ? "" : "_" + val.ItemCode) + "</span></td>" + "<td name='Color' width='10%'><div id='Color'>" + (val.Color == null ? "" : val.Color) + "</div></td>" + "<td name='Size' width='10%'><div id='Size'>" + (val.Size == null ? "" : val.Size) + "</div></td>" + "<td name='Quantity' width='7%'><div id='Quantity'>" + (val.Quantity == null ? "" : val.Quantity) + "  " + (val.UnitType == null ? "" : val.UnitType) + "</div></td>" + "<td name='Price' width='10%'><div id='Price'>" + (val.Price == null ? "" : val.Price) + "</div></td>" + "<td name='TotalPrice' width='10%'><div id='TotalPrice'>" + val.Quantity * val.Price + "</div></td>" + "<td name='Serial' width='10%'><div id='Serial'>" + (val.Serial == null ? "" : val.Serial) + "</div></td>" + "<td name='image' width='10%' ><img class='imagefortable' src='http://shirazrose.com/Data/" + val.appName + "Photos/" + val.Barcode + "/tiny_1.jpg'></td>" + "<tr>" } $invoiceDetail.find("#DetailListInvoice").html(ItemList); $invoiceDetail.removeClass("invisible"); $invoiceDetail.dialog({ width: 1e3 }).dialog("open") }, error: function (e) { alert(e.responseText) } }) } function VoucherDetailsFullAccount(orderHeaderId, container) { $con = $("#" + container); var $dialog = $("#voucherDetailsList"); $.ajax({ type: "POST", url: "/Account/GetVoucherDetailsFullAccount", contentType: "application/json; charset=utf-8", data: "{orderHeaderId: '" + orderHeaderId + "'}", success: function (response) { jq = response.d; if (jq.msg != undefined && jq.msg == "empty") { $dialog.find("#DetailListVoucher").html(""); $dialog.dialog("close"); return } var List = typeof jq == "string" ? eval("(" + jq + ")") : jq; var ItemList = ""; for (var i = 0; i < List.length; i++) { var val = List[0, i]; ItemList += "<tr id='tr" + val.OrderHeaderId + "'>" + "<td name='number' width='25%'>" + val.Number + "</td>" + "<td name='IsValid' width='20%'>" + "<span id='voucherStatus'>" + val.IsValid + "</span></td>" + "<td name='ExpieryDate' width='20%'><div id='ExpieryDate'>" + val.ExpieryDate + "</div></td>" + "<td name='Amount' width='20%'><div id='Amount'>" + val.Amount + "</div></td>" + "</tr>" } $dialog.find("#DetailListVoucher").html(ItemList); $dialog.removeClass("invisible"); $dialog.dialog({ width: 800 }).dialog("open") }, error: function (e) { alert(e.responseText) } }) } function newSort(e, t, n) { if (t != undefined && n.container != "dialog") $con = $("#" + t); if (n.container != undefined && n.container == "dialog") $con = $("#" + n.container + t); $con.find("a[rel=sort]").die("click").live("click", function () { $con.find("a[rel=sort]").removeClass("sorted"); $(this).addClass("sorted"); if (this.id == sortid.split(" ")[0].toString()) { if (sortid.split(" ")[1] == "DESC") sortid = this.id + " ASC"; else sortid = this.id + " DESC" } else { sortid = this.id + " DESC" } e(t, n) }) } function tableStyle() { $(".tablescroll").addClass("red"); $("tbody tr").addClass("ui-state-default"); $("tbody tr").mouseover(function () { $(this).addClass("ui-state-hover") }); $("tbody tr").mouseout(function () { $(this).removeClass("ui-state-hover") }) } function SetCheckboxes() { var e = getParameterByName("isOffer") == "true" ? true : false; var t = getParameterByName("isSale") == "true" ? true : false; var n = getParameterByName("isNew") == "true" ? true : false; $("#isOffer").attr("checked", e); $("#isSale").attr("checked", t); $("#isNew").attr("checked", n) } function bindDropDownList(e, t, n) { var r = ""; if (t != null) r = $("#" + t); else if (n != null) r = $("[name=" + n + "]"); $.ajax({ type: "POST", url: "/" + e.controller + "/" + e.method, contentType: "application/json; charset=utf-8", success: function (t) { if (t.isdone) { if (e.defaultText != undefined) r.html("<option value=''>" + e.defaultText + "</option>"); var n = t.options; for (var i = 0; i < n.length; i++) { var s = n[i]; r.append("<option value='" + s.value + "'>" + s.title + "</option>") } if (e.selectedval != undefined) { r.val(e.selectedval); BindProvinceCities(null, e.name, r.val()) } } }, error: function (e) { alert(e.responseText) } }) } $(document).ready(function () { setvalid("Email"); setvalid("String"); setvalid("LongString"); setvalid("Digit"); setvalid("Date"); setvalid("Phone"); setvalid("Mobile"); setvalid("Combo"); setvalid("ComboBool"); setvalid("ComboDiv"); setvalid("fileInput"); setvalid("password"); setvalid("passwordConfirm"); $("#male").live({ click: function () { selectBoxCheck($(this)) } }); $("#female").live({ click: function () { selectBoxCheck($(this)) } }); $("#txt_phone").live({ click: function () { selectBoxCheck($(this)) } }); $("#txt_mobile").live({ click: function () { selectBoxCheck($(this)) } }); var e = 0; if (getParameterByName("tabName") == "comment") e = 1; $("#txt_dateSend").datepicker({ minDate: 0, maxDate: "+30D", changeMonth: true, changeYear: true, onClose: function () { validateAll($("#newRecieverInfo")) } }) }); $.fn.digits = function () { return this.each(function () { $(this).text($(this).text().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")) }) }