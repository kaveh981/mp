@model MapiOnline.Models.CategoryItemsModel
@{
    ViewBag.Title = (Request["categoryId"] != "" && Request["categoryId"] != null) ? Model.Categories.FirstOrDefault(c => c.CategoryId == Convert.ToInt32(Request["categoryId"])).Category : ((Request["isBestSelling"] != null && Convert.ToBoolean(Request["isBestSelling"]) == true) ? "پرفروش ترین ها" : "محصولات");
    Layout = "~/Views/Shared/_LayoutNew2.fa-ir.cshtml";
}
<script type="text/javascript">
    $(document).ready(function () {
        $("[class=AddToCartCategoryItems]").unbind().click(function () {
            var productId = $(this).find("a").attr("id").replace("ord", "");
            var sizeid = "";
            $(this).parents("[name=proBox]").find("input[id*=Quality]").each(function () {
                if ($(this).is(":checked")) {
                    sizeid = $(this).attr("sizeId");
                }
            });
            AddToShoppingCart(productId, 1, sizeid, null,$(this));
            //var price = $("#qprice" + productId).html();
            //AddOrder($(this).attr("id").replace("ord", ""), 1, price, );
            //        $("#addedToBs").removeClass("hidden");
            //        $("#addedToBs").fadeIn('slow').animate({ opacity: 1.0 }, 1500).effect("pulsate", { times: 3 }, 1000).fadeOut('slow');
        });
        $("input[id=Quality2]").each(function () {
            $(this).attr("checked", true);
            $(this).parents("[name=proBox]").find("[name=itemprice]").html($(this).attr("value"));
        });
        $("input[id*=Quality]").unbind().change(function () {
            if ($(this).is(":checked")) {
                $(this).parents("[name=proBox]").find("[name=itemprice]").html($(this).attr("value"));
            }
        });
        //        $("[name=a_proName]").unbind().click(function () {
        //            GetProductDetails($(this).attr("id").replace("a", ""));
        //        });
        //        $("[name=img_proName]").unbind().click(function () {
        //            GetProductDetails($(this).attr("id").replace("img", ""));
        //        });
        //        $("[name=btn_details]").unbind().click(function () {
        //            GetProductDetails($(this).attr("id").replace("dtl", ""));
        //        });
        //        $("[name=order]").unbind().click(function () {
        //            var productId = $(this).attr("id").replace("ord", "");
        //            var price = $("#qprice" + productId).html();
        //            var qualityLevel = "";
        //            $("[name=Qualities" + productId + "]").each(function () {
        //                if ($(this).attr("checked"))
        //                    qualityLevel = $(this).attr("id").replace("Quality", "");
        //            });
        //            AddOrder($(this).attr("id").replace("ord", ""), 1, price, qualityLevel);
        //        });
        //        $(".product_box").each(function () {
        //            if (($(this).attr("colNo") * 1 - 1) % 3 == 0)
        //                $(this).addClass("cleanerRight");
        //        });
        if ('@Request["sortBy"]' != null)
            $("[name=sortBy]").val('@Request["sortBy"]');
        else
            $("[name=sortBy]").val('date');
        if ('@Request["itemPerPage"]' != null)
            $("[name=itemPerPage]").val('@Request["itemPerPage"]');
        else
            $("[name=itemPerPage]").val('12');
        if ('@Request["txtSearch"]' != null)
            $("[name=txtSearch]").val('@Request["txtSearch"]');
    });
    function listView() {
        $("#gridView").addClass("hidden");
        $("#listView").removeClass("hidden");
        $("#list_a").replaceWith(" <div id='list_b'></div>");
        $("#grid_b").replaceWith(" <a id='grid_a' title='جدول' onclick='gridView()'>جدول</a>");
    }
    function gridView() {
        $("#gridView").removeClass("hidden");
        $("#listView").addClass("hidden");
        $("#grid_a").replaceWith(" <div id='grid_b'></div>");
        $("#list_b").replaceWith(" <a id='list_a' title='لیست' onclick='listView()'>لیست</a>");
    }
    function formSubmit(dis) {
        $(dis).parents("form").get(0).submit();
    }
</script>
<div class="breadcrumb">
    <a href="../Home/Index">صفحه اصلی</a> » <span class="last">
        @if (Request["categoryId"] != "" && Request["categoryId"] != null)
        {
                Html.RenderAction("GetCategoryTitle", "Home", new
                                              {
                                                  categoryId=Request["categoryId"]
                                              });
             
@*            @(Model.Categories.FirstOrDefault(c => c.CategoryId == Convert.ToInt32(Request["categoryId"])).Category)<span
                style="font-size: 12px;">(@((Model.Categories.FirstOrDefault(c => c.CategoryId == Convert.ToInt32(Request["categoryId"])).Description != null) ? (Model.Categories.FirstOrDefault(c => c.CategoryId == Convert.ToInt32(Request["categoryId"])).Description) : ""))</span>*@
               
        }
        else
        {
            @((Request["isBestSelling"] != null && Convert.ToBoolean(Request["isBestSelling"]) == true) ? "پرفروش ترین ها" : "محصولات")
        }
    </span>

</div>
<div dir="rtl" class="product-filter">
 @using (Html.BeginForm("GetCategoryItems", "Home", new
         {
             categoryId = Request["categoryId"],
             name = Request["name"],
             txtSearch = Request["txtSearch"],
             isNew = Request["isNew"],
             isOffer = Request["isOffer"],
             isSale = Request["isSale"]
         }))
 {
    <div class="sort">
        <b>مرتب سازی بر اساس :</b>
        <select name="sortBy" onchange="formSubmit(this)" >
            <option value="EnteryDate DESC">پیش فرض</option>
            <option value="Name ASC">نام (ا - ی)</option>
            <option value="Name DESC">نام (ی - ا)</option>
            <option value="AverageSellPrice ASC">قیمت (کم &gt; زیاد)</option>
            <option value="AverageSellPrice DESC">قیمت (زیاد &gt; کم)</option>
            <option value="SellQuantity ASC">محبوبیت (کم &gt; زیاد)</option>
            <option value="SellQuantity DESC">محبوبیت (زیاد &gt; کم)</option>
        </select>
    </div>
    <div class="limit" onchange="formSubmit(this)" >
        <b>تعداد نمایش :</b>
        <select name="perPage" >
            <option value="15">15</option>
            <option value="30">30</option>
            <option value="45">45</option>
            <option value="66">66</option>
            <option value="90">90</option>
        </select>
    </div>
 }
    <div class="display">
        <b>نمایش :</b> <a id="list_a" title='لیست' onclick='listView()'>لیست</a>
        <div id="grid_b">
        </div>
    </div>
</div>
<div name="itemContainer" id="listView" class="product-list hidden">
    @for (int i = 0; i < Model.Items.Count; i++)
    {
        var item = Model.Items[i];
        <div  class="cleaner" style="padding-top: 20px; padding-bottom: 19px;">
            <div class="right" style="float: right; width: 120px!important;">
                <div class="price" id='price@(item.BarcodeId)'>
                    <span id='qprice' dir="rtl">
                        @if (Model.HasWholeRole != true && Model.hasFriendRole != true)
                        {
                            if (item.IsSale == true && item.inv_ItemDetail.Any(it => it.inv_Size == null || it.inv_Size.Count == 0))
                            {
                            <span class="price-new">@Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                                هزار تومان</span> <span class="price-old">
                                    @if (item.inv_Price.OrderByDescending(p => p.Date).Skip(1).Take(1).FirstOrDefault() != null)
                                    {
                                        @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).Skip(1).Take(1).FirstOrDefault().Online/1000)<span>
                                            هزار تومان</span>
                                    }
                                </span></span>
                            }
                            else
                            {
                            @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                                هزار تومان</span>
                            }
                        }
                        else if (Model.HasWholeRole == true)
                        {
                            if (item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Wholesale/1000 > 0)
                            {
                            @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Wholesale/1000)<span>
                                هزار تومان</span>
                            }
                            else
                            {
                            @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                                هزار تومان</span>
                            }
                        }
                        else if (Model.hasFriendRole == true)
                        {
                            if (item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Freinds/1000 > 0)
                            {
                            @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Freinds/1000)<span>
                                هزار تومان</span>
                            }
                            else
                            {
                            @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                                هزار تومان</span>
                            }
                        }
                    </span>
                </div>
                <div class="AddToCartCategoryItems">
                    <a id='ord@(item.BarcodeId)' name='order' class="button addToCart"><span>خرید</span></a></div>
            </div>
            <div class="left" style="float: left; width: 70%;">
                <div class="image" id="img@(item.BarcodeId)" style="float: left!important;">
                    <a href="@Url.Action("ProductDetails", new
                                                                         {
                                                                             productId = @item.BarcodeId,
                                                                             categoryId = Request["categoryId"],
                                                                             tabName = "general",
                                                                             isNew = Request["isNew"],
                                                                             isOffer = Request["isOffer"],
                                                                             isSale = Request["isSale"]
                                                                         })">
                        <img class="productImg" src='../Data/@(item.aspnet_Applications.ApplicationName=="/"?"":item.aspnet_Applications.ApplicationName)Photos/@(item.Barcode)/thumb_1.jpg' alt='@item.Name' title='@item.Name' style="width: 196px; height: 196px;" />
                    </a>
                </div>
                <div class="name">
                    <a href="@Url.Action("ProductDetails", new
                                                {
                                                    productId = @item.BarcodeId,
                                                    categoryId = Request["categoryId"],
                                                    tabName = "general",
                                                    isNew = Request["isNew"],
                                                    isOffer = Request["isOffer"],
                                                    isSale = Request["isSale"]
                                                })">@item.Name
                        @if (!string.IsNullOrEmpty(item.ItemCode))
                        {
                            @: کد @item.ItemCode
                                            }</a>
                </div>
                <div class="description">
                    @item.Description
                </div>
                <div class="rating">
                </div>
            </div>
            <br class="cleaner">
        </div>
    }
    <br class="cleaner">
</div>
<div id="gridView" class="product-grid">
    @for (int i = 0; i < Model.Items.Count; i++)
    {
        var item = Model.Items[i];
        <div name="itemContainer">
            <div class="name">
                <a href="@Url.Action("ProductDetails", new
                                                {
                                                    productId = @item.BarcodeId,
                                                    categoryId = Request["categoryId"],
                                                    tabName = "general",
                                                    isNew = Request["isNew"],
                                                    isOffer = Request["isOffer"],
                                                    isSale = Request["isSale"]
                                                })">@item.Name
                    @if (!string.IsNullOrEmpty(item.ItemCode))
                    {
                        @: کد @item.ItemCode
                                                                                                                                }</a>
            </div>
            <div id="img@(item.BarcodeId)" class="image">
                <a href="@Url.Action("ProductDetails", new
                                                                         {
                                                                             productId = @item.BarcodeId,
                                                                             categoryId = Request["categoryId"],
                                                                             tabName = "general",
                                                                             isNew = Request["isNew"],
                                                                             isOffer = Request["isOffer"],
                                                                             isSale = Request["isSale"]
                                                                         })">
                    <img class='productImg cleaner' src='../Data/@(item.aspnet_Applications.ApplicationName=="/"?"":item.aspnet_Applications.ApplicationName)Photos/@(item.Barcode)/thumb_1.jpg' alt='@item.Name' title='@item.Name' style="width: 196px; height: 196px;"/>
                </a>
            </div>
            <div class="price" id='price@(item.BarcodeId)'>
                <span id='qprice' dir="rtl">
                    @if (Model.HasWholeRole != true && Model.hasFriendRole != true)
                    {
                        if (item.IsSale == true && item.inv_ItemDetail.Any(it => it.inv_Size == null || it.inv_Size.Count == 0))
                        {
                        <span class="price-new">@Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                            هزار تومان</span> <span class="price-old">
                                @if (item.inv_Price.OrderByDescending(p => p.Date).Skip(1).Take(1).FirstOrDefault() != null)
                                {
                                    @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).Skip(1).Take(1).FirstOrDefault().Online/1000)<span>
                                        هزار تومان</span>
                                }
                            </span></span>
                        }
                        else
                        {
                        @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                            هزار تومان</span>
                        }
                    }
                    else if (Model.HasWholeRole == true)
                    {
                        if (item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Wholesale/1000 > 0)
                        {
                        @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Wholesale/1000)<span>
                            هزار تومان</span>
                        }
                        else
                        {
                        @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                            هزار تومان</span>
                        }
                    }
                    else if (Model.hasFriendRole == true)
                    {
                        if (item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Freinds/1000 > 0)
                        {
                        @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Freinds/1000)<span>
                            هزار تومان</span>
                        }
                        else
                        {
                        @Convert.ToInt32(item.inv_Price.OrderByDescending(p => p.Date).FirstOrDefault().Online/1000)<span>
                            هزار تومان</span>
                        }
                    }
                </span>
            </div>
            <div class="description">
                @item.Description
            </div>
            @*<div class="rating">
            </div>*@
            <div class="AddToCartCategoryItems">
                <a id='ord@(item.BarcodeId)' name='order' class="button addToCart"><span>خرید</span></a></div>
            @* <div class="wishlist">
                <a class="tip" onclick="addToWishList('45');">Add to Wish List</a><span class="tooltip">Wishlist</span></div>
            <div class="compare">
                <a class="tip2" onclick="addToCompare('45');">Add to Compare</a><span class="tooltip2">Compare</span></div>*@
        </div>
    }
</div>

<div class="pagination">
    <div class="links">
        @{
            Pager pager = ViewBag.Pager;

            if (pager.HasPreviousPage)
            {
            @Html.ActionLink("  «« اولین    ", "GetCategoryItems", new
                       {
                           page = pager.FirstPageIndex,
                           categoryId = Request["categoryId"],
                           isNew = Request["isNew"],
                           isOffer = Request["isOffer"],
                           isSale = Request["isSale"],
                           sortBy = Request["sortBy"],
                           itemPerPage = Request["itemPerPage"]
                       });
            @Html.ActionLink("  « قبلی   ", "GetCategoryItems", new
                       {
                           page = pager.PreviousPageIndex,
                           categoryId = Request["categoryId"],
                           isNew = Request["isNew"],
                           isOffer = Request["isOffer"],
                           isSale = Request["isSale"],
                           sortBy = Request["sortBy"],
                           itemPerPage = Request["itemPerPage"]
                       });
            }

            foreach (int page in pager)
            {
            @Html.ActionLink(" " + page.ToString() + " ", "GetCategoryItems", new
                       {
                           page = page,
                           categoryId = Request["categoryId"],
                           isNew = Request["isNew"],
                           isOffer = Request["isOffer"],
                           isSale = Request["isSale"],
                           sortBy = Request["sortBy"],
                           itemPerPage = Request["itemPerPage"]
                       }, new { @class = (@page == @pager.CurrentPageIndex ? "current" : "") });
            }

            if (pager.HasNextPage)
            {
            @Html.ActionLink("   بعدی »  ", "GetCategoryItems", new
                       {
                           page = pager.NextPageIndex,
                           categoryId = Request["categoryId"],
                           isNew = Request["isNew"],
                           isOffer = Request["isOffer"],
                           isSale = Request["isSale"],
                           sortBy = Request["sortBy"],
                           itemPerPage = Request["itemPerPage"]
                       });
            @Html.ActionLink("   آخرین »»  ", "GetCategoryItems", new
                       {
                           page = pager.LastPageIndex,
                           categoryId = Request["categoryId"],
                           isNew = Request["isNew"],
                           isOffer = Request["isOffer"],
                           isSale = Request["isSale"],
                           sortBy = Request["sortBy"],
                           itemPerPage = Request["itemPerPage"]
                       });
            }
        }
    </div>
    <div class="results">
    </div>
</div>
